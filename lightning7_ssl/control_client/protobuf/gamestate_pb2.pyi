"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import ssl_game_event_2019_pb2
import ssl_referee_game_event_pb2
import ssl_referee_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GameState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GameState._State.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Halt: GameState._State.ValueType  # 1
        Stop: GameState._State.ValueType  # 2
        Game: GameState._State.ValueType  # 3
        GameForce: GameState._State.ValueType  # 4
        KickoffYellowPrepare: GameState._State.ValueType  # 5
        KickoffYellow: GameState._State.ValueType  # 6
        PenaltyYellowPrepare: GameState._State.ValueType  # 7
        PenaltyYellow: GameState._State.ValueType  # 8
        PenaltyYellowRunning: GameState._State.ValueType  # 21
        DirectYellow: GameState._State.ValueType  # 9
        IndirectYellow: GameState._State.ValueType  # 10
        BallPlacementYellow: GameState._State.ValueType  # 19
        KickoffBluePrepare: GameState._State.ValueType  # 11
        KickoffBlue: GameState._State.ValueType  # 12
        PenaltyBluePrepare: GameState._State.ValueType  # 13
        PenaltyBlue: GameState._State.ValueType  # 14
        PenaltyBlueRunning: GameState._State.ValueType  # 22
        DirectBlue: GameState._State.ValueType  # 15
        IndirectBlue: GameState._State.ValueType  # 16
        BallPlacementBlue: GameState._State.ValueType  # 20
        TimeoutYellow: GameState._State.ValueType  # 17
        TimeoutBlue: GameState._State.ValueType  # 18

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    Halt: GameState.State.ValueType  # 1
    Stop: GameState.State.ValueType  # 2
    Game: GameState.State.ValueType  # 3
    GameForce: GameState.State.ValueType  # 4
    KickoffYellowPrepare: GameState.State.ValueType  # 5
    KickoffYellow: GameState.State.ValueType  # 6
    PenaltyYellowPrepare: GameState.State.ValueType  # 7
    PenaltyYellow: GameState.State.ValueType  # 8
    PenaltyYellowRunning: GameState.State.ValueType  # 21
    DirectYellow: GameState.State.ValueType  # 9
    IndirectYellow: GameState.State.ValueType  # 10
    BallPlacementYellow: GameState.State.ValueType  # 19
    KickoffBluePrepare: GameState.State.ValueType  # 11
    KickoffBlue: GameState.State.ValueType  # 12
    PenaltyBluePrepare: GameState.State.ValueType  # 13
    PenaltyBlue: GameState.State.ValueType  # 14
    PenaltyBlueRunning: GameState.State.ValueType  # 22
    DirectBlue: GameState.State.ValueType  # 15
    IndirectBlue: GameState.State.ValueType  # 16
    BallPlacementBlue: GameState.State.ValueType  # 20
    TimeoutYellow: GameState.State.ValueType  # 17
    TimeoutBlue: GameState.State.ValueType  # 18

    STAGE_FIELD_NUMBER: builtins.int
    STAGE_TIME_LEFT_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    YELLOW_FIELD_NUMBER: builtins.int
    BLUE_FIELD_NUMBER: builtins.int
    DESIGNATED_POSITION_FIELD_NUMBER: builtins.int
    GAME_EVENT_FIELD_NUMBER: builtins.int
    GOALS_FLIPPED_FIELD_NUMBER: builtins.int
    IS_REAL_GAME_RUNNING_FIELD_NUMBER: builtins.int
    CURRENT_ACTION_TIME_REMAINING_FIELD_NUMBER: builtins.int
    NEXT_STATE_FIELD_NUMBER: builtins.int
    GAME_EVENT_2019_FIELD_NUMBER: builtins.int
    stage: ssl_referee_pb2.SSL_Referee.Stage.ValueType
    stage_time_left: builtins.int
    state: global___GameState.State.ValueType
    """Current state on the field
    Required as the refbox command doesn't tell whether we or
    the opponents have taken a free kick / kickoff / penalty yet
    """
    @property
    def yellow(self) -> ssl_referee_pb2.SSL_Referee.TeamInfo: ...
    @property
    def blue(self) -> ssl_referee_pb2.SSL_Referee.TeamInfo: ...
    @property
    def designated_position(self) -> ssl_referee_pb2.SSL_Referee.Point: ...
    @property
    def game_event(self) -> ssl_referee_game_event_pb2.SSL_Referee_Game_Event: ...
    goals_flipped: builtins.bool
    is_real_game_running: builtins.bool
    """even when the internal referee is enabled,
    this value will be true when a real game is running (i.e. not in halt, timeout)
    """
    current_action_time_remaining: builtins.int
    """The time in microseconds that is remaining until the current action times out
    The time will not be reset. It can get negative.
    An autoRef would raise an appropriate event, if the time gets negative.
    Possible actions where this time is relevant:
     * free kicks
     * kickoff, penalty kick, force start
     * ball placement
    """
    next_state: global___GameState.State.ValueType
    """the state that is supposed to come after the current state
    this is important for ball placement for which it is necessary to
    know the state that would follow the ball placement if successfull.
    Note that it is not guaranteed to be the next state, since ball placement might fail
    or fouls might be commited
    """
    @property
    def game_event_2019(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssl_game_event_2019_pb2.GameEvent]:
        """the last game events that was sent by the game controller
        it replaces the field game_event
        """
    def __init__(
        self,
        *,
        stage: ssl_referee_pb2.SSL_Referee.Stage.ValueType | None = ...,
        stage_time_left: builtins.int | None = ...,
        state: global___GameState.State.ValueType | None = ...,
        yellow: ssl_referee_pb2.SSL_Referee.TeamInfo | None = ...,
        blue: ssl_referee_pb2.SSL_Referee.TeamInfo | None = ...,
        designated_position: ssl_referee_pb2.SSL_Referee.Point | None = ...,
        game_event: ssl_referee_game_event_pb2.SSL_Referee_Game_Event | None = ...,
        goals_flipped: builtins.bool | None = ...,
        is_real_game_running: builtins.bool | None = ...,
        current_action_time_remaining: builtins.int | None = ...,
        next_state: global___GameState.State.ValueType | None = ...,
        game_event_2019: collections.abc.Iterable[ssl_game_event_2019_pb2.GameEvent] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["blue", b"blue", "current_action_time_remaining", b"current_action_time_remaining", "designated_position", b"designated_position", "game_event", b"game_event", "goals_flipped", b"goals_flipped", "is_real_game_running", b"is_real_game_running", "next_state", b"next_state", "stage", b"stage", "stage_time_left", b"stage_time_left", "state", b"state", "yellow", b"yellow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["blue", b"blue", "current_action_time_remaining", b"current_action_time_remaining", "designated_position", b"designated_position", "game_event", b"game_event", "game_event_2019", b"game_event_2019", "goals_flipped", b"goals_flipped", "is_real_game_running", b"is_real_game_running", "next_state", b"next_state", "stage", b"stage", "stage_time_left", b"stage_time_left", "state", b"state", "yellow", b"yellow"]) -> None: ...

global___GameState = GameState
