"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Team:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TeamEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Team.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _Team.ValueType  # 0
    """team not set"""
    YELLOW: _Team.ValueType  # 1
    """yellow team"""
    BLUE: _Team.ValueType  # 2
    """blue team"""

class Team(_Team, metaclass=_TeamEnumTypeWrapper):
    """Team is either blue or yellow"""

UNKNOWN: Team.ValueType  # 0
"""team not set"""
YELLOW: Team.ValueType  # 1
"""yellow team"""
BLUE: Team.ValueType  # 2
"""blue team"""
global___Team = Team

class _Division:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DivisionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Division.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DIV_UNKNOWN: _Division.ValueType  # 0
    DIV_A: _Division.ValueType  # 1
    DIV_B: _Division.ValueType  # 2

class Division(_Division, metaclass=_DivisionEnumTypeWrapper):
    """Division denotes the current division, which influences some rules"""

DIV_UNKNOWN: Division.ValueType  # 0
DIV_A: Division.ValueType  # 1
DIV_B: Division.ValueType  # 2
global___Division = Division

@typing_extensions.final
class BotId(google.protobuf.message.Message):
    """BotId is the combination of a team and a robot id"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TEAM_FIELD_NUMBER: builtins.int
    id: builtins.int
    """the robot id - a negative value indicates that the id is not set"""
    team: global___Team.ValueType
    """the team that the robot belongs to"""
    def __init__(
        self,
        *,
        id: builtins.int | None = ...,
        team: global___Team.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id", "team", b"team"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "team", b"team"]) -> None: ...

global___BotId = BotId

@typing_extensions.final
class Location(google.protobuf.message.Message):
    """Location is a 2d-coordinate on the field in ssl-vision coordinate system. Units are in meters."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.float
    """the x-coordinate in [m] in the ssl-vision coordinate system"""
    y: builtins.float
    """the y-coordinate in [m] in the ssl-vision coordinate system"""
    def __init__(
        self,
        *,
        x: builtins.float | None = ...,
        y: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y"]) -> None: ...

global___Location = Location

@typing_extensions.final
class ControllerReply(google.protobuf.message.Message):
    """a reply that is sent by the controller for each request from teams or autoRefs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _StatusCode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ControllerReply._StatusCode.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN_STATUS_CODE: ControllerReply._StatusCode.ValueType  # 0
        OK: ControllerReply._StatusCode.ValueType  # 1
        REJECTED: ControllerReply._StatusCode.ValueType  # 2

    class StatusCode(_StatusCode, metaclass=_StatusCodeEnumTypeWrapper): ...
    UNKNOWN_STATUS_CODE: ControllerReply.StatusCode.ValueType  # 0
    OK: ControllerReply.StatusCode.ValueType  # 1
    REJECTED: ControllerReply.StatusCode.ValueType  # 2

    class _Verification:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _VerificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ControllerReply._Verification.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN_VERIFICATION: ControllerReply._Verification.ValueType  # 0
        VERIFIED: ControllerReply._Verification.ValueType  # 1
        UNVERIFIED: ControllerReply._Verification.ValueType  # 2

    class Verification(_Verification, metaclass=_VerificationEnumTypeWrapper): ...
    UNKNOWN_VERIFICATION: ControllerReply.Verification.ValueType  # 0
    VERIFIED: ControllerReply.Verification.ValueType  # 1
    UNVERIFIED: ControllerReply.Verification.ValueType  # 2

    STATUS_CODE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    NEXT_TOKEN_FIELD_NUMBER: builtins.int
    VERIFICATION_FIELD_NUMBER: builtins.int
    status_code: global___ControllerReply.StatusCode.ValueType
    """status_code is an optional code that indicates the result of the last request"""
    reason: builtins.str
    """reason is an optional explanation of the status code"""
    next_token: builtins.str
    """next_token must be send with the next request, if secure communication is used
    the token is used to avoid replay attacks
    the token is always present in the very first message before the registration starts
    the token is not present, if secure communication is not used
    """
    verification: global___ControllerReply.Verification.ValueType
    """verification indicates if the last request could be verified (secure communication)"""
    def __init__(
        self,
        *,
        status_code: global___ControllerReply.StatusCode.ValueType | None = ...,
        reason: builtins.str | None = ...,
        next_token: builtins.str | None = ...,
        verification: global___ControllerReply.Verification.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["next_token", b"next_token", "reason", b"reason", "status_code", b"status_code", "verification", b"verification"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_token", b"next_token", "reason", b"reason", "status_code", b"status_code", "verification", b"verification"]) -> None: ...

global___ControllerReply = ControllerReply

@typing_extensions.final
class Signature(google.protobuf.message.Message):
    """Signature can be added to a request to let it be verfied by the controller"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    PKCS1V15_FIELD_NUMBER: builtins.int
    token: builtins.str
    """the token that was received with the last controller reply"""
    pkcs1v15: builtins.bytes
    """the PKCS1v15 signature of this message"""
    def __init__(
        self,
        *,
        token: builtins.str | None = ...,
        pkcs1v15: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pkcs1v15", b"pkcs1v15", "token", b"token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pkcs1v15", b"pkcs1v15", "token", b"token"]) -> None: ...

global___Signature = Signature

@typing_extensions.final
class BallSpeedMeasurement(google.protobuf.message.Message):
    """BallSpeedMeasurement is a single measurement sample of the ball speed"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    BALL_SPEED_FIELD_NUMBER: builtins.int
    INITIAL_BALL_SPEED_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    """The UNIX timestamp [Î¼s] when the measurement was taken."""
    ball_speed: builtins.float
    """the ball speed measurement [m/s]"""
    initial_ball_speed: builtins.float
    """the estimated initial ball speed (kick speed) [m/s]"""
    def __init__(
        self,
        *,
        timestamp: builtins.int | None = ...,
        ball_speed: builtins.float | None = ...,
        initial_ball_speed: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ball_speed", b"ball_speed", "initial_ball_speed", b"initial_ball_speed", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ball_speed", b"ball_speed", "initial_ball_speed", b"initial_ball_speed", "timestamp", b"timestamp"]) -> None: ...

global___BallSpeedMeasurement = BallSpeedMeasurement
