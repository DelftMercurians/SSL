"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import ssl_game_controller_common_pb2
import ssl_game_controller_geometry_pb2
import ssl_game_event_2019_pb2
import ssl_gc_state_pb2
import ssl_referee_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class StateChange(google.protobuf.message.Message):
    """A state change"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    STATE_PRE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CHANGE_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    id: builtins.int
    """A unique increasing id"""
    @property
    def state_pre(self) -> ssl_gc_state_pb2.State:
        """The previous state"""
    @property
    def state(self) -> ssl_gc_state_pb2.State:
        """The state after the change was applied"""
    @property
    def change(self) -> global___Change:
        """The change itself"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the change was triggered"""
    def __init__(
        self,
        *,
        id: builtins.int | None = ...,
        state_pre: ssl_gc_state_pb2.State | None = ...,
        state: ssl_gc_state_pb2.State | None = ...,
        change: global___Change | None = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "change",
            b"change",
            "id",
            b"id",
            "state",
            b"state",
            "state_pre",
            b"state_pre",
            "timestamp",
            b"timestamp",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "change",
            b"change",
            "id",
            b"id",
            "state",
            b"state",
            "state_pre",
            b"state_pre",
            "timestamp",
            b"timestamp",
        ],
    ) -> None: ...

global___StateChange = StateChange

@typing_extensions.final
class Change(google.protobuf.message.Message):
    """A certain change"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGIN_FIELD_NUMBER: builtins.int
    REVERTIBLE_FIELD_NUMBER: builtins.int
    NEW_COMMAND_FIELD_NUMBER: builtins.int
    CHANGE_STAGE_FIELD_NUMBER: builtins.int
    SET_BALL_PLACEMENT_POS_FIELD_NUMBER: builtins.int
    ADD_YELLOW_CARD_FIELD_NUMBER: builtins.int
    ADD_RED_CARD_FIELD_NUMBER: builtins.int
    YELLOW_CARD_OVER_FIELD_NUMBER: builtins.int
    ADD_GAME_EVENT_FIELD_NUMBER: builtins.int
    ADD_PASSIVE_GAME_EVENT_FIELD_NUMBER: builtins.int
    ADD_PROPOSAL_FIELD_NUMBER: builtins.int
    START_BALL_PLACEMENT_FIELD_NUMBER: builtins.int
    CONTINUE_FIELD_NUMBER: builtins.int
    UPDATE_CONFIG_FIELD_NUMBER: builtins.int
    UPDATE_TEAM_STATE_FIELD_NUMBER: builtins.int
    SWITCH_COLORS_FIELD_NUMBER: builtins.int
    REVERT_FIELD_NUMBER: builtins.int
    NEW_GAME_STATE_FIELD_NUMBER: builtins.int
    ACCEPT_PROPOSAL_GROUP_FIELD_NUMBER: builtins.int
    origin: builtins.str
    """An identifier of the origin that triggered the change"""
    revertible: builtins.bool
    """Is this change revertible?"""
    @property
    def new_command(self) -> global___NewCommand: ...
    @property
    def change_stage(self) -> global___ChangeStage: ...
    @property
    def set_ball_placement_pos(self) -> global___SetBallPlacementPos: ...
    @property
    def add_yellow_card(self) -> global___AddYellowCard: ...
    @property
    def add_red_card(self) -> global___AddRedCard: ...
    @property
    def yellow_card_over(self) -> global___YellowCardOver: ...
    @property
    def add_game_event(self) -> global___AddGameEvent: ...
    @property
    def add_passive_game_event(self) -> global___AddPassiveGameEvent: ...
    @property
    def add_proposal(self) -> global___AddProposal: ...
    @property
    def start_ball_placement(self) -> global___StartBallPlacement: ...
    @property
    def update_config(self) -> global___UpdateConfig: ...
    @property
    def update_team_state(self) -> global___UpdateTeamState: ...
    @property
    def switch_colors(self) -> global___SwitchColors: ...
    @property
    def revert(self) -> global___Revert: ...
    @property
    def new_game_state(self) -> global___NewGameState: ...
    @property
    def accept_proposal_group(self) -> global___AcceptProposalGroup: ...
    def __init__(
        self,
        *,
        origin: builtins.str | None = ...,
        revertible: builtins.bool | None = ...,
        new_command: global___NewCommand | None = ...,
        change_stage: global___ChangeStage | None = ...,
        set_ball_placement_pos: global___SetBallPlacementPos | None = ...,
        add_yellow_card: global___AddYellowCard | None = ...,
        add_red_card: global___AddRedCard | None = ...,
        yellow_card_over: global___YellowCardOver | None = ...,
        add_game_event: global___AddGameEvent | None = ...,
        add_passive_game_event: global___AddPassiveGameEvent | None = ...,
        add_proposal: global___AddProposal | None = ...,
        start_ball_placement: global___StartBallPlacement | None = ...,
        update_config: global___UpdateConfig | None = ...,
        update_team_state: global___UpdateTeamState | None = ...,
        switch_colors: global___SwitchColors | None = ...,
        revert: global___Revert | None = ...,
        new_game_state: global___NewGameState | None = ...,
        accept_proposal_group: global___AcceptProposalGroup | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "accept_proposal_group",
            b"accept_proposal_group",
            "add_game_event",
            b"add_game_event",
            "add_passive_game_event",
            b"add_passive_game_event",
            "add_proposal",
            b"add_proposal",
            "add_red_card",
            b"add_red_card",
            "add_yellow_card",
            b"add_yellow_card",
            "change",
            b"change",
            "change_stage",
            b"change_stage",
            "continue",
            b"continue",
            "new_command",
            b"new_command",
            "new_game_state",
            b"new_game_state",
            "origin",
            b"origin",
            "revert",
            b"revert",
            "revertible",
            b"revertible",
            "set_ball_placement_pos",
            b"set_ball_placement_pos",
            "start_ball_placement",
            b"start_ball_placement",
            "switch_colors",
            b"switch_colors",
            "update_config",
            b"update_config",
            "update_team_state",
            b"update_team_state",
            "yellow_card_over",
            b"yellow_card_over",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "accept_proposal_group",
            b"accept_proposal_group",
            "add_game_event",
            b"add_game_event",
            "add_passive_game_event",
            b"add_passive_game_event",
            "add_proposal",
            b"add_proposal",
            "add_red_card",
            b"add_red_card",
            "add_yellow_card",
            b"add_yellow_card",
            "change",
            b"change",
            "change_stage",
            b"change_stage",
            "continue",
            b"continue",
            "new_command",
            b"new_command",
            "new_game_state",
            b"new_game_state",
            "origin",
            b"origin",
            "revert",
            b"revert",
            "revertible",
            b"revertible",
            "set_ball_placement_pos",
            b"set_ball_placement_pos",
            "start_ball_placement",
            b"start_ball_placement",
            "switch_colors",
            b"switch_colors",
            "update_config",
            b"update_config",
            "update_team_state",
            b"update_team_state",
            "yellow_card_over",
            b"yellow_card_over",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["change", b"change"]
    ) -> (
        typing_extensions.Literal[
            "new_command",
            "change_stage",
            "set_ball_placement_pos",
            "add_yellow_card",
            "add_red_card",
            "yellow_card_over",
            "add_game_event",
            "add_passive_game_event",
            "add_proposal",
            "start_ball_placement",
            "continue",
            "update_config",
            "update_team_state",
            "switch_colors",
            "revert",
            "new_game_state",
            "accept_proposal_group",
        ]
        | None
    ): ...

global___Change = Change

@typing_extensions.final
class NewCommand(google.protobuf.message.Message):
    """New referee command"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMAND_FIELD_NUMBER: builtins.int
    @property
    def command(self) -> ssl_gc_state_pb2.Command:
        """The command"""
    def __init__(
        self,
        *,
        command: ssl_gc_state_pb2.Command | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["command", b"command"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command", b"command"]) -> None: ...

global___NewCommand = NewCommand

@typing_extensions.final
class ChangeStage(google.protobuf.message.Message):
    """Switch to a new stage"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NEW_STAGE_FIELD_NUMBER: builtins.int
    new_stage: ssl_referee_pb2.SSL_Referee.Stage.ValueType
    """The new stage"""
    def __init__(
        self,
        *,
        new_stage: ssl_referee_pb2.SSL_Referee.Stage.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["new_stage", b"new_stage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["new_stage", b"new_stage"]) -> None: ...

global___ChangeStage = ChangeStage

@typing_extensions.final
class SetBallPlacementPos(google.protobuf.message.Message):
    """Set the ball placement pos"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POS_FIELD_NUMBER: builtins.int
    @property
    def pos(self) -> ssl_game_controller_geometry_pb2.Vector2:
        """The position in [m]"""
    def __init__(
        self,
        *,
        pos: ssl_game_controller_geometry_pb2.Vector2 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pos", b"pos"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pos", b"pos"]) -> None: ...

global___SetBallPlacementPos = SetBallPlacementPos

@typing_extensions.final
class AddYellowCard(google.protobuf.message.Message):
    """Add a new yellow card"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOR_TEAM_FIELD_NUMBER: builtins.int
    CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
    for_team: ssl_game_controller_common_pb2.Team.ValueType
    """The team that the card is for"""
    @property
    def caused_by_game_event(self) -> ssl_game_event_2019_pb2.GameEvent:
        """The game event that caused the card"""
    def __init__(
        self,
        *,
        for_team: ssl_game_controller_common_pb2.Team.ValueType | None = ...,
        caused_by_game_event: ssl_game_event_2019_pb2.GameEvent | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "caused_by_game_event", b"caused_by_game_event", "for_team", b"for_team"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "caused_by_game_event", b"caused_by_game_event", "for_team", b"for_team"
        ],
    ) -> None: ...

global___AddYellowCard = AddYellowCard

@typing_extensions.final
class AddRedCard(google.protobuf.message.Message):
    """Add a new red card"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOR_TEAM_FIELD_NUMBER: builtins.int
    CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
    for_team: ssl_game_controller_common_pb2.Team.ValueType
    """The team that the card is for"""
    @property
    def caused_by_game_event(self) -> ssl_game_event_2019_pb2.GameEvent:
        """The game event that caused the card"""
    def __init__(
        self,
        *,
        for_team: ssl_game_controller_common_pb2.Team.ValueType | None = ...,
        caused_by_game_event: ssl_game_event_2019_pb2.GameEvent | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "caused_by_game_event", b"caused_by_game_event", "for_team", b"for_team"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "caused_by_game_event", b"caused_by_game_event", "for_team", b"for_team"
        ],
    ) -> None: ...

global___AddRedCard = AddRedCard

@typing_extensions.final
class YellowCardOver(google.protobuf.message.Message):
    """Trigger when a yellow card timed out"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOR_TEAM_FIELD_NUMBER: builtins.int
    for_team: ssl_game_controller_common_pb2.Team.ValueType
    """The team that the card was for"""
    def __init__(
        self,
        *,
        for_team: ssl_game_controller_common_pb2.Team.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["for_team", b"for_team"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["for_team", b"for_team"]) -> None: ...

global___YellowCardOver = YellowCardOver

@typing_extensions.final
class AddGameEvent(google.protobuf.message.Message):
    """Add a new game event"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GAME_EVENT_FIELD_NUMBER: builtins.int
    @property
    def game_event(self) -> ssl_game_event_2019_pb2.GameEvent:
        """The game event"""
    def __init__(
        self,
        *,
        game_event: ssl_game_event_2019_pb2.GameEvent | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["game_event", b"game_event"]
    ) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["game_event", b"game_event"]) -> None: ...

global___AddGameEvent = AddGameEvent

@typing_extensions.final
class AddPassiveGameEvent(google.protobuf.message.Message):
    """Add a new passive game event (that is only logged, but does not automatically trigger anything)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GAME_EVENT_FIELD_NUMBER: builtins.int
    @property
    def game_event(self) -> ssl_game_event_2019_pb2.GameEvent:
        """The game event"""
    def __init__(
        self,
        *,
        game_event: ssl_game_event_2019_pb2.GameEvent | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["game_event", b"game_event"]
    ) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["game_event", b"game_event"]) -> None: ...

global___AddPassiveGameEvent = AddPassiveGameEvent

@typing_extensions.final
class AddProposal(google.protobuf.message.Message):
    """Add a new proposal (i.e. from an auto referee for majority voting)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROPOSAL_FIELD_NUMBER: builtins.int
    @property
    def proposal(self) -> ssl_gc_state_pb2.Proposal:
        """The proposal"""
    def __init__(
        self,
        *,
        proposal: ssl_gc_state_pb2.Proposal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["proposal", b"proposal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["proposal", b"proposal"]) -> None: ...

global___AddProposal = AddProposal

@typing_extensions.final
class AcceptProposalGroup(google.protobuf.message.Message):
    """Accept a proposal group (that contain one or more proposals of the same type)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_ID_FIELD_NUMBER: builtins.int
    ACCEPTED_BY_FIELD_NUMBER: builtins.int
    group_id: builtins.int
    """The id of the group"""
    accepted_by: builtins.str
    """An identifier of the acceptor"""
    def __init__(
        self,
        *,
        group_id: builtins.int | None = ...,
        accepted_by: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["accepted_by", b"accepted_by", "group_id", b"group_id"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["accepted_by", b"accepted_by", "group_id", b"group_id"]
    ) -> None: ...

global___AcceptProposalGroup = AcceptProposalGroup

@typing_extensions.final
class StartBallPlacement(google.protobuf.message.Message):
    """Initiate ball placement"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StartBallPlacement = StartBallPlacement

@typing_extensions.final
class Continue(google.protobuf.message.Message):
    """Continue with the next referee command"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Continue = Continue

@typing_extensions.final
class UpdateConfig(google.protobuf.message.Message):
    """Update some configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIVISION_FIELD_NUMBER: builtins.int
    FIRST_KICKOFF_TEAM_FIELD_NUMBER: builtins.int
    AUTO_CONTINUE_FIELD_NUMBER: builtins.int
    division: ssl_game_controller_common_pb2.Division.ValueType
    """The division to play with"""
    first_kickoff_team: ssl_game_controller_common_pb2.Team.ValueType
    """the team that does/did the first kick off"""
    auto_continue: builtins.bool
    """Enable automatic continuation when all conditions are met"""
    def __init__(
        self,
        *,
        division: ssl_game_controller_common_pb2.Division.ValueType | None = ...,
        first_kickoff_team: ssl_game_controller_common_pb2.Team.ValueType | None = ...,
        auto_continue: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "auto_continue",
            b"auto_continue",
            "division",
            b"division",
            "first_kickoff_team",
            b"first_kickoff_team",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "auto_continue",
            b"auto_continue",
            "division",
            b"division",
            "first_kickoff_team",
            b"first_kickoff_team",
        ],
    ) -> None: ...

global___UpdateConfig = UpdateConfig

@typing_extensions.final
class UpdateTeamState(google.protobuf.message.Message):
    """Update the current state of a team (all fields that should be updated are set)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOR_TEAM_FIELD_NUMBER: builtins.int
    TEAM_NAME_FIELD_NUMBER: builtins.int
    GOALS_FIELD_NUMBER: builtins.int
    GOALKEEPER_FIELD_NUMBER: builtins.int
    TIMEOUTS_LEFT_FIELD_NUMBER: builtins.int
    TIMEOUT_TIME_LEFT_FIELD_NUMBER: builtins.int
    ON_POSITIVE_HALF_FIELD_NUMBER: builtins.int
    BALL_PLACEMENT_FAILURES_FIELD_NUMBER: builtins.int
    CAN_PLACE_BALL_FIELD_NUMBER: builtins.int
    CHALLENGE_FLAGS_LEFT_FIELD_NUMBER: builtins.int
    REQUESTS_BOT_SUBSTITUTION_FIELD_NUMBER: builtins.int
    REQUESTS_TIMEOUT_FIELD_NUMBER: builtins.int
    REQUESTS_CHALLENGE_FIELD_NUMBER: builtins.int
    REQUESTS_EMERGENCY_STOP_FIELD_NUMBER: builtins.int
    YELLOW_CARD_FIELD_NUMBER: builtins.int
    RED_CARD_FIELD_NUMBER: builtins.int
    FOUL_FIELD_NUMBER: builtins.int
    REMOVE_YELLOW_CARD_FIELD_NUMBER: builtins.int
    REMOVE_RED_CARD_FIELD_NUMBER: builtins.int
    REMOVE_FOUL_FIELD_NUMBER: builtins.int
    for_team: ssl_game_controller_common_pb2.Team.ValueType
    """The team"""
    team_name: builtins.str
    """Change the name of the team"""
    goals: builtins.int
    """Change the number of goals that the teams has at the moment"""
    goalkeeper: builtins.int
    """The id of the goal keeper"""
    timeouts_left: builtins.int
    """The number of timeouts that the team has left"""
    timeout_time_left: builtins.str
    """The timeout time that the team has left"""
    on_positive_half: builtins.bool
    """Does the team play on the positive or the negative half (in ssl-vision coordinates)?"""
    ball_placement_failures: builtins.int
    """The number of ball placement failures"""
    can_place_ball: builtins.bool
    """Can the team place the ball, or is ball placement for this team disabled and should be skipped?"""
    challenge_flags_left: builtins.int
    """The number of challenge flags that the team has left"""
    requests_bot_substitution: builtins.bool
    """Does the team want to substitute a robot in the next possible situation?"""
    requests_timeout: builtins.bool
    """Does the team want to take a timeout in the next possible situation?"""
    requests_challenge: builtins.bool
    """Does the team want to challenge a recent decision of the referee?"""
    requests_emergency_stop: builtins.bool
    """Does the team want to request an emergency stop?"""
    @property
    def yellow_card(self) -> ssl_gc_state_pb2.YellowCard:
        """Update a certain yellow card of the team"""
    @property
    def red_card(self) -> ssl_gc_state_pb2.RedCard:
        """Update a certain red card of the team"""
    @property
    def foul(self) -> ssl_gc_state_pb2.Foul:
        """Update a certain foul of the team"""
    remove_yellow_card: builtins.int
    """Remove the yellow card with this id"""
    remove_red_card: builtins.int
    """Remove the red card with this id"""
    remove_foul: builtins.int
    """Remove the foul with this id"""
    def __init__(
        self,
        *,
        for_team: ssl_game_controller_common_pb2.Team.ValueType | None = ...,
        team_name: builtins.str | None = ...,
        goals: builtins.int | None = ...,
        goalkeeper: builtins.int | None = ...,
        timeouts_left: builtins.int | None = ...,
        timeout_time_left: builtins.str | None = ...,
        on_positive_half: builtins.bool | None = ...,
        ball_placement_failures: builtins.int | None = ...,
        can_place_ball: builtins.bool | None = ...,
        challenge_flags_left: builtins.int | None = ...,
        requests_bot_substitution: builtins.bool | None = ...,
        requests_timeout: builtins.bool | None = ...,
        requests_challenge: builtins.bool | None = ...,
        requests_emergency_stop: builtins.bool | None = ...,
        yellow_card: ssl_gc_state_pb2.YellowCard | None = ...,
        red_card: ssl_gc_state_pb2.RedCard | None = ...,
        foul: ssl_gc_state_pb2.Foul | None = ...,
        remove_yellow_card: builtins.int | None = ...,
        remove_red_card: builtins.int | None = ...,
        remove_foul: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "ball_placement_failures",
            b"ball_placement_failures",
            "can_place_ball",
            b"can_place_ball",
            "challenge_flags_left",
            b"challenge_flags_left",
            "for_team",
            b"for_team",
            "foul",
            b"foul",
            "goalkeeper",
            b"goalkeeper",
            "goals",
            b"goals",
            "on_positive_half",
            b"on_positive_half",
            "red_card",
            b"red_card",
            "remove_foul",
            b"remove_foul",
            "remove_red_card",
            b"remove_red_card",
            "remove_yellow_card",
            b"remove_yellow_card",
            "requests_bot_substitution",
            b"requests_bot_substitution",
            "requests_challenge",
            b"requests_challenge",
            "requests_emergency_stop",
            b"requests_emergency_stop",
            "requests_timeout",
            b"requests_timeout",
            "team_name",
            b"team_name",
            "timeout_time_left",
            b"timeout_time_left",
            "timeouts_left",
            b"timeouts_left",
            "yellow_card",
            b"yellow_card",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ball_placement_failures",
            b"ball_placement_failures",
            "can_place_ball",
            b"can_place_ball",
            "challenge_flags_left",
            b"challenge_flags_left",
            "for_team",
            b"for_team",
            "foul",
            b"foul",
            "goalkeeper",
            b"goalkeeper",
            "goals",
            b"goals",
            "on_positive_half",
            b"on_positive_half",
            "red_card",
            b"red_card",
            "remove_foul",
            b"remove_foul",
            "remove_red_card",
            b"remove_red_card",
            "remove_yellow_card",
            b"remove_yellow_card",
            "requests_bot_substitution",
            b"requests_bot_substitution",
            "requests_challenge",
            b"requests_challenge",
            "requests_emergency_stop",
            b"requests_emergency_stop",
            "requests_timeout",
            b"requests_timeout",
            "team_name",
            b"team_name",
            "timeout_time_left",
            b"timeout_time_left",
            "timeouts_left",
            b"timeouts_left",
            "yellow_card",
            b"yellow_card",
        ],
    ) -> None: ...

global___UpdateTeamState = UpdateTeamState

@typing_extensions.final
class SwitchColors(google.protobuf.message.Message):
    """Switch the team colors"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SwitchColors = SwitchColors

@typing_extensions.final
class Revert(google.protobuf.message.Message):
    """Revert a certain change"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANGE_ID_FIELD_NUMBER: builtins.int
    change_id: builtins.int
    """The id of the change"""
    def __init__(
        self,
        *,
        change_id: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["change_id", b"change_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["change_id", b"change_id"]) -> None: ...

global___Revert = Revert

@typing_extensions.final
class NewGameState(google.protobuf.message.Message):
    """Change the current game state"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GAME_STATE_FIELD_NUMBER: builtins.int
    @property
    def game_state(self) -> ssl_gc_state_pb2.GameState:
        """The new game state"""
    def __init__(
        self,
        *,
        game_state: ssl_gc_state_pb2.GameState | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["game_state", b"game_state"]
    ) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["game_state", b"game_state"]) -> None: ...

global___NewGameState = NewGameState
