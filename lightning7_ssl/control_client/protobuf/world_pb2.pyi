"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import robot_pb2
import ssl_mixed_team_pb2
import ssl_wrapper_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _WorldSource:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WorldSourceEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WorldSource.ValueType], builtins.type
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INTERNAL_SIMULATION: _WorldSource.ValueType  # 1
    EXTERNAL_SIMULATION: _WorldSource.ValueType  # 2
    REAL_LIFE: _WorldSource.ValueType  # 3

class WorldSource(_WorldSource, metaclass=_WorldSourceEnumTypeWrapper): ...

INTERNAL_SIMULATION: WorldSource.ValueType  # 1
EXTERNAL_SIMULATION: WorldSource.ValueType  # 2
REAL_LIFE: WorldSource.ValueType  # 3
global___WorldSource = WorldSource

@typing_extensions.final
class Geometry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _GeometryType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _GeometryTypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Geometry._GeometryType.ValueType],
        builtins.type,
    ):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_2014: Geometry._GeometryType.ValueType  # 1
        TYPE_2018: Geometry._GeometryType.ValueType  # 2

    class GeometryType(_GeometryType, metaclass=_GeometryTypeEnumTypeWrapper): ...
    TYPE_2014: Geometry.GeometryType.ValueType  # 1
    TYPE_2018: Geometry.GeometryType.ValueType  # 2

    class _Division:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _DivisionEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Geometry._Division.ValueType],
        builtins.type,
    ):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        A: Geometry._Division.ValueType  # 1
        B: Geometry._Division.ValueType  # 2

    class Division(_Division, metaclass=_DivisionEnumTypeWrapper): ...
    A: Geometry.Division.ValueType  # 1
    B: Geometry.Division.ValueType  # 2

    LINE_WIDTH_FIELD_NUMBER: builtins.int
    FIELD_WIDTH_FIELD_NUMBER: builtins.int
    FIELD_HEIGHT_FIELD_NUMBER: builtins.int
    BOUNDARY_WIDTH_FIELD_NUMBER: builtins.int
    GOAL_WIDTH_FIELD_NUMBER: builtins.int
    GOAL_DEPTH_FIELD_NUMBER: builtins.int
    GOAL_WALL_WIDTH_FIELD_NUMBER: builtins.int
    CENTER_CIRCLE_RADIUS_FIELD_NUMBER: builtins.int
    DEFENSE_RADIUS_FIELD_NUMBER: builtins.int
    DEFENSE_STRETCH_FIELD_NUMBER: builtins.int
    FREE_KICK_FROM_DEFENSE_DIST_FIELD_NUMBER: builtins.int
    PENALTY_SPOT_FROM_FIELD_LINE_DIST_FIELD_NUMBER: builtins.int
    PENALTY_LINE_FROM_SPOT_DIST_FIELD_NUMBER: builtins.int
    GOAL_HEIGHT_FIELD_NUMBER: builtins.int
    DEFENSE_WIDTH_FIELD_NUMBER: builtins.int
    DEFENSE_HEIGHT_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DIVISION_FIELD_NUMBER: builtins.int
    BALL_MODEL_FIELD_NUMBER: builtins.int
    line_width: builtins.float
    field_width: builtins.float
    field_height: builtins.float
    boundary_width: builtins.float
    goal_width: builtins.float
    """deprecated = 5"""
    goal_depth: builtins.float
    goal_wall_width: builtins.float
    center_circle_radius: builtins.float
    defense_radius: builtins.float
    defense_stretch: builtins.float
    free_kick_from_defense_dist: builtins.float
    penalty_spot_from_field_line_dist: builtins.float
    penalty_line_from_spot_dist: builtins.float
    goal_height: builtins.float
    defense_width: builtins.float
    defense_height: builtins.float
    type: global___Geometry.GeometryType.ValueType
    division: global___Geometry.Division.ValueType
    @property
    def ball_model(self) -> global___BallModel: ...
    def __init__(
        self,
        *,
        line_width: builtins.float | None = ...,
        field_width: builtins.float | None = ...,
        field_height: builtins.float | None = ...,
        boundary_width: builtins.float | None = ...,
        goal_width: builtins.float | None = ...,
        goal_depth: builtins.float | None = ...,
        goal_wall_width: builtins.float | None = ...,
        center_circle_radius: builtins.float | None = ...,
        defense_radius: builtins.float | None = ...,
        defense_stretch: builtins.float | None = ...,
        free_kick_from_defense_dist: builtins.float | None = ...,
        penalty_spot_from_field_line_dist: builtins.float | None = ...,
        penalty_line_from_spot_dist: builtins.float | None = ...,
        goal_height: builtins.float | None = ...,
        defense_width: builtins.float | None = ...,
        defense_height: builtins.float | None = ...,
        type: global___Geometry.GeometryType.ValueType | None = ...,
        division: global___Geometry.Division.ValueType | None = ...,
        ball_model: global___BallModel | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "ball_model",
            b"ball_model",
            "boundary_width",
            b"boundary_width",
            "center_circle_radius",
            b"center_circle_radius",
            "defense_height",
            b"defense_height",
            "defense_radius",
            b"defense_radius",
            "defense_stretch",
            b"defense_stretch",
            "defense_width",
            b"defense_width",
            "division",
            b"division",
            "field_height",
            b"field_height",
            "field_width",
            b"field_width",
            "free_kick_from_defense_dist",
            b"free_kick_from_defense_dist",
            "goal_depth",
            b"goal_depth",
            "goal_height",
            b"goal_height",
            "goal_wall_width",
            b"goal_wall_width",
            "goal_width",
            b"goal_width",
            "line_width",
            b"line_width",
            "penalty_line_from_spot_dist",
            b"penalty_line_from_spot_dist",
            "penalty_spot_from_field_line_dist",
            b"penalty_spot_from_field_line_dist",
            "type",
            b"type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ball_model",
            b"ball_model",
            "boundary_width",
            b"boundary_width",
            "center_circle_radius",
            b"center_circle_radius",
            "defense_height",
            b"defense_height",
            "defense_radius",
            b"defense_radius",
            "defense_stretch",
            b"defense_stretch",
            "defense_width",
            b"defense_width",
            "division",
            b"division",
            "field_height",
            b"field_height",
            "field_width",
            b"field_width",
            "free_kick_from_defense_dist",
            b"free_kick_from_defense_dist",
            "goal_depth",
            b"goal_depth",
            "goal_height",
            b"goal_height",
            "goal_wall_width",
            b"goal_wall_width",
            "goal_width",
            b"goal_width",
            "line_width",
            b"line_width",
            "penalty_line_from_spot_dist",
            b"penalty_line_from_spot_dist",
            "penalty_spot_from_field_line_dist",
            b"penalty_spot_from_field_line_dist",
            "type",
            b"type",
        ],
    ) -> None: ...

global___Geometry = Geometry

@typing_extensions.final
class BallModel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FAST_DECELERATION_FIELD_NUMBER: builtins.int
    SLOW_DECELERATION_FIELD_NUMBER: builtins.int
    SWITCH_RATIO_FIELD_NUMBER: builtins.int
    Z_DAMPING_FIELD_NUMBER: builtins.int
    XY_DAMPING_FIELD_NUMBER: builtins.int
    fast_deceleration: builtins.float
    """rolling friction"""
    slow_deceleration: builtins.float
    switch_ratio: builtins.float
    z_damping: builtins.float
    """bounce friction"""
    xy_damping: builtins.float
    def __init__(
        self,
        *,
        fast_deceleration: builtins.float | None = ...,
        slow_deceleration: builtins.float | None = ...,
        switch_ratio: builtins.float | None = ...,
        z_damping: builtins.float | None = ...,
        xy_damping: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "fast_deceleration",
            b"fast_deceleration",
            "slow_deceleration",
            b"slow_deceleration",
            "switch_ratio",
            b"switch_ratio",
            "xy_damping",
            b"xy_damping",
            "z_damping",
            b"z_damping",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "fast_deceleration",
            b"fast_deceleration",
            "slow_deceleration",
            b"slow_deceleration",
            "switch_ratio",
            b"switch_ratio",
            "xy_damping",
            b"xy_damping",
            "z_damping",
            b"z_damping",
        ],
    ) -> None: ...

global___BallModel = BallModel

@typing_extensions.final
class DivisionDimensions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_WIDTH_A_FIELD_NUMBER: builtins.int
    FIELD_HEIGHT_A_FIELD_NUMBER: builtins.int
    FIELD_WIDTH_B_FIELD_NUMBER: builtins.int
    FIELD_HEIGHT_B_FIELD_NUMBER: builtins.int
    field_width_a: builtins.float
    field_height_a: builtins.float
    field_width_b: builtins.float
    field_height_b: builtins.float
    def __init__(
        self,
        *,
        field_width_a: builtins.float | None = ...,
        field_height_a: builtins.float | None = ...,
        field_width_b: builtins.float | None = ...,
        field_height_b: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "field_height_a",
            b"field_height_a",
            "field_height_b",
            b"field_height_b",
            "field_width_a",
            b"field_width_a",
            "field_width_b",
            b"field_width_b",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "field_height_a",
            b"field_height_a",
            "field_height_b",
            b"field_height_b",
            "field_width_a",
            b"field_width_a",
            "field_width_b",
            b"field_width_b",
        ],
    ) -> None: ...

global___DivisionDimensions = DivisionDimensions

@typing_extensions.final
class BallPosition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    DERIVED_Z_FIELD_NUMBER: builtins.int
    V_X_FIELD_NUMBER: builtins.int
    V_Y_FIELD_NUMBER: builtins.int
    SYSTEM_DELAY_FIELD_NUMBER: builtins.int
    TIME_DIFF_SCALED_FIELD_NUMBER: builtins.int
    CAMERA_ID_FIELD_NUMBER: builtins.int
    AREA_FIELD_NUMBER: builtins.int
    VISION_PROCESSING_TIME_FIELD_NUMBER: builtins.int
    time: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    derived_z: builtins.float
    v_x: builtins.float
    v_y: builtins.float
    system_delay: builtins.float
    time_diff_scaled: builtins.float
    """scaled by factor 100"""
    camera_id: builtins.int
    area: builtins.float
    vision_processing_time: builtins.int
    def __init__(
        self,
        *,
        time: builtins.int | None = ...,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        derived_z: builtins.float | None = ...,
        v_x: builtins.float | None = ...,
        v_y: builtins.float | None = ...,
        system_delay: builtins.float | None = ...,
        time_diff_scaled: builtins.float | None = ...,
        camera_id: builtins.int | None = ...,
        area: builtins.float | None = ...,
        vision_processing_time: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "area",
            b"area",
            "camera_id",
            b"camera_id",
            "derived_z",
            b"derived_z",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "system_delay",
            b"system_delay",
            "time",
            b"time",
            "time_diff_scaled",
            b"time_diff_scaled",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "vision_processing_time",
            b"vision_processing_time",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "area",
            b"area",
            "camera_id",
            b"camera_id",
            "derived_z",
            b"derived_z",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "system_delay",
            b"system_delay",
            "time",
            b"time",
            "time_diff_scaled",
            b"time_diff_scaled",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "vision_processing_time",
            b"vision_processing_time",
        ],
    ) -> None: ...

global___BallPosition = BallPosition

@typing_extensions.final
class Ball(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    P_Z_FIELD_NUMBER: builtins.int
    V_X_FIELD_NUMBER: builtins.int
    V_Y_FIELD_NUMBER: builtins.int
    V_Z_FIELD_NUMBER: builtins.int
    TOUCHDOWN_X_FIELD_NUMBER: builtins.int
    TOUCHDOWN_Y_FIELD_NUMBER: builtins.int
    IS_BOUNCING_FIELD_NUMBER: builtins.int
    MAX_SPEED_FIELD_NUMBER: builtins.int
    RAW_FIELD_NUMBER: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    p_z: builtins.float
    v_x: builtins.float
    v_y: builtins.float
    v_z: builtins.float
    touchdown_x: builtins.float
    touchdown_y: builtins.float
    is_bouncing: builtins.bool
    max_speed: builtins.float
    @property
    def raw(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BallPosition]: ...
    def __init__(
        self,
        *,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        p_z: builtins.float | None = ...,
        v_x: builtins.float | None = ...,
        v_y: builtins.float | None = ...,
        v_z: builtins.float | None = ...,
        touchdown_x: builtins.float | None = ...,
        touchdown_y: builtins.float | None = ...,
        is_bouncing: builtins.bool | None = ...,
        max_speed: builtins.float | None = ...,
        raw: collections.abc.Iterable[global___BallPosition] | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "is_bouncing",
            b"is_bouncing",
            "max_speed",
            b"max_speed",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "p_z",
            b"p_z",
            "touchdown_x",
            b"touchdown_x",
            "touchdown_y",
            b"touchdown_y",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "v_z",
            b"v_z",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "is_bouncing",
            b"is_bouncing",
            "max_speed",
            b"max_speed",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "p_z",
            b"p_z",
            "raw",
            b"raw",
            "touchdown_x",
            b"touchdown_x",
            "touchdown_y",
            b"touchdown_y",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "v_z",
            b"v_z",
        ],
    ) -> None: ...

global___Ball = Ball

@typing_extensions.final
class RobotPosition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    PHI_FIELD_NUMBER: builtins.int
    V_X_FIELD_NUMBER: builtins.int
    V_Y_FIELD_NUMBER: builtins.int
    SYSTEM_DELAY_FIELD_NUMBER: builtins.int
    TIME_DIFF_SCALED_FIELD_NUMBER: builtins.int
    OMEGA_FIELD_NUMBER: builtins.int
    CAMERA_ID_FIELD_NUMBER: builtins.int
    VISION_PROCESSING_TIME_FIELD_NUMBER: builtins.int
    time: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    phi: builtins.float
    v_x: builtins.float
    v_y: builtins.float
    system_delay: builtins.float
    time_diff_scaled: builtins.float
    """scaled by factor 100"""
    omega: builtins.float
    camera_id: builtins.int
    vision_processing_time: builtins.int
    def __init__(
        self,
        *,
        time: builtins.int | None = ...,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        phi: builtins.float | None = ...,
        v_x: builtins.float | None = ...,
        v_y: builtins.float | None = ...,
        system_delay: builtins.float | None = ...,
        time_diff_scaled: builtins.float | None = ...,
        omega: builtins.float | None = ...,
        camera_id: builtins.int | None = ...,
        vision_processing_time: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "camera_id",
            b"camera_id",
            "omega",
            b"omega",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "phi",
            b"phi",
            "system_delay",
            b"system_delay",
            "time",
            b"time",
            "time_diff_scaled",
            b"time_diff_scaled",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "vision_processing_time",
            b"vision_processing_time",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "camera_id",
            b"camera_id",
            "omega",
            b"omega",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "phi",
            b"phi",
            "system_delay",
            b"system_delay",
            "time",
            b"time",
            "time_diff_scaled",
            b"time_diff_scaled",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "vision_processing_time",
            b"vision_processing_time",
        ],
    ) -> None: ...

global___RobotPosition = RobotPosition

@typing_extensions.final
class Robot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    PHI_FIELD_NUMBER: builtins.int
    V_X_FIELD_NUMBER: builtins.int
    V_Y_FIELD_NUMBER: builtins.int
    OMEGA_FIELD_NUMBER: builtins.int
    RAW_FIELD_NUMBER: builtins.int
    id: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    phi: builtins.float
    v_x: builtins.float
    v_y: builtins.float
    omega: builtins.float
    @property
    def raw(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPosition]: ...
    def __init__(
        self,
        *,
        id: builtins.int | None = ...,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        phi: builtins.float | None = ...,
        v_x: builtins.float | None = ...,
        v_y: builtins.float | None = ...,
        omega: builtins.float | None = ...,
        raw: collections.abc.Iterable[global___RobotPosition] | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "id",
            b"id",
            "omega",
            b"omega",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "phi",
            b"phi",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "id",
            b"id",
            "omega",
            b"omega",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "phi",
            b"phi",
            "raw",
            b"raw",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
        ],
    ) -> None: ...

global___Robot = Robot

@typing_extensions.final
class TrackingAOI(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X1_FIELD_NUMBER: builtins.int
    Y1_FIELD_NUMBER: builtins.int
    X2_FIELD_NUMBER: builtins.int
    Y2_FIELD_NUMBER: builtins.int
    x1: builtins.float
    y1: builtins.float
    x2: builtins.float
    y2: builtins.float
    def __init__(
        self,
        *,
        x1: builtins.float | None = ...,
        y1: builtins.float | None = ...,
        x2: builtins.float | None = ...,
        y2: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["x1", b"x1", "x2", b"x2", "y1", b"y1", "y2", b"y2"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["x1", b"x1", "x2", b"x2", "y1", b"y1", "y2", b"y2"]
    ) -> None: ...

global___TrackingAOI = TrackingAOI

@typing_extensions.final
class State(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    BALL_FIELD_NUMBER: builtins.int
    YELLOW_FIELD_NUMBER: builtins.int
    BLUE_FIELD_NUMBER: builtins.int
    RADIO_RESPONSE_FIELD_NUMBER: builtins.int
    IS_SIMULATED_FIELD_NUMBER: builtins.int
    HAS_VISION_DATA_FIELD_NUMBER: builtins.int
    MIXED_TEAM_INFO_FIELD_NUMBER: builtins.int
    TRACKING_AOI_FIELD_NUMBER: builtins.int
    SIMPLE_TRACKING_YELLOW_FIELD_NUMBER: builtins.int
    SIMPLE_TRACKING_BLUE_FIELD_NUMBER: builtins.int
    SIMPLE_TRACKING_BALL_FIELD_NUMBER: builtins.int
    REALITY_FIELD_NUMBER: builtins.int
    VISION_FRAMES_FIELD_NUMBER: builtins.int
    VISION_FRAME_TIMES_FIELD_NUMBER: builtins.int
    SYSTEM_DELAY_FIELD_NUMBER: builtins.int
    WORLD_SOURCE_FIELD_NUMBER: builtins.int
    time: builtins.int
    @property
    def ball(self) -> global___Ball: ...
    @property
    def yellow(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]: ...
    @property
    def blue(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]:
        """robot states predicted with help of the desired trajectory (if available)"""
    @property
    def radio_response(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[robot_pb2.RadioResponse]: ...
    is_simulated: builtins.bool
    """deprecated, use world_source instead"""
    has_vision_data: builtins.bool
    @property
    def mixed_team_info(self) -> ssl_mixed_team_pb2.TeamPlan: ...
    @property
    def tracking_aoi(self) -> global___TrackingAOI: ...
    @property
    def simple_tracking_yellow(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]:
        """robot states predicted without trajectories, only from vision data"""
    @property
    def simple_tracking_blue(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]: ...
    @property
    def simple_tracking_ball(self) -> global___Ball: ...
    @property
    def reality(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SimulatorState]:
        """debug information from the simulator"""
    @property
    def vision_frames(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        ssl_wrapper_pb2.SSL_WrapperPacket
    ]:
        """data for tracking replay and vision extraction"""
    @property
    def vision_frame_times(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    system_delay: builtins.int
    world_source: global___WorldSource.ValueType
    def __init__(
        self,
        *,
        time: builtins.int | None = ...,
        ball: global___Ball | None = ...,
        yellow: collections.abc.Iterable[global___Robot] | None = ...,
        blue: collections.abc.Iterable[global___Robot] | None = ...,
        radio_response: collections.abc.Iterable[robot_pb2.RadioResponse] | None = ...,
        is_simulated: builtins.bool | None = ...,
        has_vision_data: builtins.bool | None = ...,
        mixed_team_info: ssl_mixed_team_pb2.TeamPlan | None = ...,
        tracking_aoi: global___TrackingAOI | None = ...,
        simple_tracking_yellow: collections.abc.Iterable[global___Robot] | None = ...,
        simple_tracking_blue: collections.abc.Iterable[global___Robot] | None = ...,
        simple_tracking_ball: global___Ball | None = ...,
        reality: collections.abc.Iterable[global___SimulatorState] | None = ...,
        vision_frames: collections.abc.Iterable[ssl_wrapper_pb2.SSL_WrapperPacket] | None = ...,
        vision_frame_times: collections.abc.Iterable[builtins.int] | None = ...,
        system_delay: builtins.int | None = ...,
        world_source: global___WorldSource.ValueType | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "ball",
            b"ball",
            "has_vision_data",
            b"has_vision_data",
            "is_simulated",
            b"is_simulated",
            "mixed_team_info",
            b"mixed_team_info",
            "simple_tracking_ball",
            b"simple_tracking_ball",
            "system_delay",
            b"system_delay",
            "time",
            b"time",
            "tracking_aoi",
            b"tracking_aoi",
            "world_source",
            b"world_source",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ball",
            b"ball",
            "blue",
            b"blue",
            "has_vision_data",
            b"has_vision_data",
            "is_simulated",
            b"is_simulated",
            "mixed_team_info",
            b"mixed_team_info",
            "radio_response",
            b"radio_response",
            "reality",
            b"reality",
            "simple_tracking_ball",
            b"simple_tracking_ball",
            "simple_tracking_blue",
            b"simple_tracking_blue",
            "simple_tracking_yellow",
            b"simple_tracking_yellow",
            "system_delay",
            b"system_delay",
            "time",
            b"time",
            "tracking_aoi",
            b"tracking_aoi",
            "vision_frame_times",
            b"vision_frame_times",
            "vision_frames",
            b"vision_frames",
            "world_source",
            b"world_source",
            "yellow",
            b"yellow",
        ],
    ) -> None: ...

global___State = State

@typing_extensions.final
class SimulatorState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLUE_ROBOTS_FIELD_NUMBER: builtins.int
    YELLOW_ROBOTS_FIELD_NUMBER: builtins.int
    BALL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def blue_robots(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SimRobot]: ...
    @property
    def yellow_robots(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SimRobot]: ...
    @property
    def ball(self) -> global___SimBall: ...
    time: builtins.int
    def __init__(
        self,
        *,
        blue_robots: collections.abc.Iterable[global___SimRobot] | None = ...,
        yellow_robots: collections.abc.Iterable[global___SimRobot] | None = ...,
        ball: global___SimBall | None = ...,
        time: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["ball", b"ball", "time", b"time"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ball", b"ball", "blue_robots", b"blue_robots", "time", b"time", "yellow_robots", b"yellow_robots"
        ],
    ) -> None: ...

global___SimulatorState = SimulatorState

@typing_extensions.final
class SimBall(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    P_Z_FIELD_NUMBER: builtins.int
    V_X_FIELD_NUMBER: builtins.int
    V_Y_FIELD_NUMBER: builtins.int
    V_Z_FIELD_NUMBER: builtins.int
    ANGULAR_X_FIELD_NUMBER: builtins.int
    ANGULAR_Y_FIELD_NUMBER: builtins.int
    ANGULAR_Z_FIELD_NUMBER: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    p_z: builtins.float
    v_x: builtins.float
    v_y: builtins.float
    v_z: builtins.float
    angular_x: builtins.float
    angular_y: builtins.float
    angular_z: builtins.float
    def __init__(
        self,
        *,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        p_z: builtins.float | None = ...,
        v_x: builtins.float | None = ...,
        v_y: builtins.float | None = ...,
        v_z: builtins.float | None = ...,
        angular_x: builtins.float | None = ...,
        angular_y: builtins.float | None = ...,
        angular_z: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "angular_x",
            b"angular_x",
            "angular_y",
            b"angular_y",
            "angular_z",
            b"angular_z",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "p_z",
            b"p_z",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "v_z",
            b"v_z",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "angular_x",
            b"angular_x",
            "angular_y",
            b"angular_y",
            "angular_z",
            b"angular_z",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "p_z",
            b"p_z",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "v_z",
            b"v_z",
        ],
    ) -> None: ...

global___SimBall = SimBall

@typing_extensions.final
class Quaternion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    I_FIELD_NUMBER: builtins.int
    J_FIELD_NUMBER: builtins.int
    K_FIELD_NUMBER: builtins.int
    REAL_FIELD_NUMBER: builtins.int
    i: builtins.float
    j: builtins.float
    k: builtins.float
    real: builtins.float
    def __init__(
        self,
        *,
        i: builtins.float | None = ...,
        j: builtins.float | None = ...,
        k: builtins.float | None = ...,
        real: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["i", b"i", "j", b"j", "k", b"k", "real", b"real"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["i", b"i", "j", b"j", "k", b"k", "real", b"real"]
    ) -> None: ...

global___Quaternion = Quaternion

@typing_extensions.final
class SimRobot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    P_Z_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    V_X_FIELD_NUMBER: builtins.int
    V_Y_FIELD_NUMBER: builtins.int
    V_Z_FIELD_NUMBER: builtins.int
    R_X_FIELD_NUMBER: builtins.int
    R_Y_FIELD_NUMBER: builtins.int
    R_Z_FIELD_NUMBER: builtins.int
    TOUCHES_BALL_FIELD_NUMBER: builtins.int
    id: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    p_z: builtins.float
    @property
    def rotation(self) -> global___Quaternion: ...
    v_x: builtins.float
    v_y: builtins.float
    v_z: builtins.float
    r_x: builtins.float
    r_y: builtins.float
    r_z: builtins.float
    touches_ball: builtins.bool
    """touching counts anywhere on the robot; both the dribbler and the robot body"""
    def __init__(
        self,
        *,
        id: builtins.int | None = ...,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        p_z: builtins.float | None = ...,
        rotation: global___Quaternion | None = ...,
        v_x: builtins.float | None = ...,
        v_y: builtins.float | None = ...,
        v_z: builtins.float | None = ...,
        r_x: builtins.float | None = ...,
        r_y: builtins.float | None = ...,
        r_z: builtins.float | None = ...,
        touches_ball: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "id",
            b"id",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "p_z",
            b"p_z",
            "r_x",
            b"r_x",
            "r_y",
            b"r_y",
            "r_z",
            b"r_z",
            "rotation",
            b"rotation",
            "touches_ball",
            b"touches_ball",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "v_z",
            b"v_z",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "id",
            b"id",
            "p_x",
            b"p_x",
            "p_y",
            b"p_y",
            "p_z",
            b"p_z",
            "r_x",
            b"r_x",
            "r_y",
            b"r_y",
            "r_z",
            b"r_z",
            "rotation",
            b"rotation",
            "touches_ball",
            b"touches_ball",
            "v_x",
            b"v_x",
            "v_y",
            b"v_y",
            "v_z",
            b"v_z",
        ],
    ) -> None: ...

global___SimRobot = SimRobot
