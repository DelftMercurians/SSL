"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import logfile_pb2
import robot_pb2
import ssl_geometry_pb2
import ssl_simulation_control_pb2
import ssl_simulation_custom_erforce_realism_pb2
import sys
import typing
import world_pb2

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DebuggerInputTarget:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DebuggerInputTargetEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DebuggerInputTarget.ValueType], builtins.type
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DITStrategyYellow: _DebuggerInputTarget.ValueType  # 0
    DITStrategyBlue: _DebuggerInputTarget.ValueType  # 1
    DITAutoref: _DebuggerInputTarget.ValueType  # 2

class DebuggerInputTarget(_DebuggerInputTarget, metaclass=_DebuggerInputTargetEnumTypeWrapper): ...

DITStrategyYellow: DebuggerInputTarget.ValueType  # 0
DITStrategyBlue: DebuggerInputTarget.ValueType  # 1
DITAutoref: DebuggerInputTarget.ValueType  # 2
global___DebuggerInputTarget = DebuggerInputTarget

class _PauseSimulatorReason:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PauseSimulatorReasonEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PauseSimulatorReason.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Ui: _PauseSimulatorReason.ValueType  # 1
    WindowFocus: _PauseSimulatorReason.ValueType  # 2
    DebugBlueStrategy: _PauseSimulatorReason.ValueType  # 3
    DebugYellowStrategy: _PauseSimulatorReason.ValueType  # 4
    DebugAutoref: _PauseSimulatorReason.ValueType  # 5
    Replay: _PauseSimulatorReason.ValueType  # 6
    Horus: _PauseSimulatorReason.ValueType  # 7
    Logging: _PauseSimulatorReason.ValueType  # 8

class PauseSimulatorReason(_PauseSimulatorReason, metaclass=_PauseSimulatorReasonEnumTypeWrapper): ...

Ui: PauseSimulatorReason.ValueType  # 1
WindowFocus: PauseSimulatorReason.ValueType  # 2
DebugBlueStrategy: PauseSimulatorReason.ValueType  # 3
DebugYellowStrategy: PauseSimulatorReason.ValueType  # 4
DebugAutoref: PauseSimulatorReason.ValueType  # 5
Replay: PauseSimulatorReason.ValueType  # 6
Horus: PauseSimulatorReason.ValueType  # 7
Logging: PauseSimulatorReason.ValueType  # 8
global___PauseSimulatorReason = PauseSimulatorReason

@typing_extensions.final
class RobotMoveCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    id: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    def __init__(
        self,
        *,
        id: builtins.int | None = ...,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["id", b"id", "p_x", b"p_x", "p_y", b"p_y"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["id", b"id", "p_x", b"p_x", "p_y", b"p_y"]
    ) -> None: ...

global___RobotMoveCommand = RobotMoveCommand

@typing_extensions.final
class SimulatorSetup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GEOMETRY_FIELD_NUMBER: builtins.int
    CAMERA_SETUP_FIELD_NUMBER: builtins.int
    @property
    def geometry(self) -> world_pb2.Geometry: ...
    @property
    def camera_setup(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        ssl_geometry_pb2.SSL_GeometryCameraCalibration
    ]: ...
    def __init__(
        self,
        *,
        geometry: world_pb2.Geometry | None = ...,
        camera_setup: collections.abc.Iterable[ssl_geometry_pb2.SSL_GeometryCameraCalibration] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["geometry", b"geometry"]) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["camera_setup", b"camera_setup", "geometry", b"geometry"]
    ) -> None: ...

global___SimulatorSetup = SimulatorSetup

@typing_extensions.final
class SimulatorWorstCaseVision(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MIN_ROBOT_DETECTION_TIME_FIELD_NUMBER: builtins.int
    MIN_BALL_DETECTION_TIME_FIELD_NUMBER: builtins.int
    min_robot_detection_time: builtins.float
    """minimum time between two detections of one robot or ball (in seconds)
    when the feature is disabled, zero may be set here
    """
    min_ball_detection_time: builtins.float
    def __init__(
        self,
        *,
        min_robot_detection_time: builtins.float | None = ...,
        min_ball_detection_time: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "min_ball_detection_time",
            b"min_ball_detection_time",
            "min_robot_detection_time",
            b"min_robot_detection_time",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "min_ball_detection_time",
            b"min_ball_detection_time",
            "min_robot_detection_time",
            b"min_robot_detection_time",
        ],
    ) -> None: ...

global___SimulatorWorstCaseVision = SimulatorWorstCaseVision

@typing_extensions.final
class CommandSimulator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLE_FIELD_NUMBER: builtins.int
    SIMULATOR_SETUP_FIELD_NUMBER: builtins.int
    VISION_WORST_CASE_FIELD_NUMBER: builtins.int
    REALISM_CONFIG_FIELD_NUMBER: builtins.int
    SET_SIMULATOR_STATE_FIELD_NUMBER: builtins.int
    SSL_CONTROL_FIELD_NUMBER: builtins.int
    enable: builtins.bool
    @property
    def simulator_setup(self) -> global___SimulatorSetup: ...
    @property
    def vision_worst_case(self) -> global___SimulatorWorstCaseVision: ...
    @property
    def realism_config(self) -> ssl_simulation_custom_erforce_realism_pb2.RealismConfigErForce: ...
    @property
    def set_simulator_state(self) -> world_pb2.SimulatorState: ...
    @property
    def ssl_control(self) -> ssl_simulation_control_pb2.SimulatorControl: ...
    def __init__(
        self,
        *,
        enable: builtins.bool | None = ...,
        simulator_setup: global___SimulatorSetup | None = ...,
        vision_worst_case: global___SimulatorWorstCaseVision | None = ...,
        realism_config: ssl_simulation_custom_erforce_realism_pb2.RealismConfigErForce | None = ...,
        set_simulator_state: world_pb2.SimulatorState | None = ...,
        ssl_control: ssl_simulation_control_pb2.SimulatorControl | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "enable",
            b"enable",
            "realism_config",
            b"realism_config",
            "set_simulator_state",
            b"set_simulator_state",
            "simulator_setup",
            b"simulator_setup",
            "ssl_control",
            b"ssl_control",
            "vision_worst_case",
            b"vision_worst_case",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "enable",
            b"enable",
            "realism_config",
            b"realism_config",
            "set_simulator_state",
            b"set_simulator_state",
            "simulator_setup",
            b"simulator_setup",
            "ssl_control",
            b"ssl_control",
            "vision_worst_case",
            b"vision_worst_case",
        ],
    ) -> None: ...

global___CommandSimulator = CommandSimulator

@typing_extensions.final
class CommandReferee(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVE_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    USE_INTERNAL_AUTOREF_FIELD_NUMBER: builtins.int
    USE_AUTOMATIC_ROBOT_EXCHANGE_FIELD_NUMBER: builtins.int
    active: builtins.bool
    command: builtins.bytes
    use_internal_autoref: builtins.bool
    use_automatic_robot_exchange: builtins.bool
    def __init__(
        self,
        *,
        active: builtins.bool | None = ...,
        command: builtins.bytes | None = ...,
        use_internal_autoref: builtins.bool | None = ...,
        use_automatic_robot_exchange: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "active",
            b"active",
            "command",
            b"command",
            "use_automatic_robot_exchange",
            b"use_automatic_robot_exchange",
            "use_internal_autoref",
            b"use_internal_autoref",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "active",
            b"active",
            "command",
            b"command",
            "use_automatic_robot_exchange",
            b"use_automatic_robot_exchange",
            "use_internal_autoref",
            b"use_internal_autoref",
        ],
    ) -> None: ...

global___CommandReferee = CommandReferee

@typing_extensions.final
class CommandStrategyLoad(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILENAME_FIELD_NUMBER: builtins.int
    ENTRY_POINT_FIELD_NUMBER: builtins.int
    filename: builtins.str
    entry_point: builtins.str
    def __init__(
        self,
        *,
        filename: builtins.str | None = ...,
        entry_point: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["entry_point", b"entry_point", "filename", b"filename"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["entry_point", b"entry_point", "filename", b"filename"]
    ) -> None: ...

global___CommandStrategyLoad = CommandStrategyLoad

@typing_extensions.final
class CommandStrategyClose(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___CommandStrategyClose = CommandStrategyClose

@typing_extensions.final
class CommandStrategyTriggerDebugger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___CommandStrategyTriggerDebugger = CommandStrategyTriggerDebugger

@typing_extensions.final
class CommandStrategy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOAD_FIELD_NUMBER: builtins.int
    CLOSE_FIELD_NUMBER: builtins.int
    RELOAD_FIELD_NUMBER: builtins.int
    AUTO_RELOAD_FIELD_NUMBER: builtins.int
    ENABLE_DEBUG_FIELD_NUMBER: builtins.int
    DEBUG_FIELD_NUMBER: builtins.int
    PERFORMANCE_MODE_FIELD_NUMBER: builtins.int
    START_PROFILING_FIELD_NUMBER: builtins.int
    FINISH_AND_SAVE_PROFILE_FIELD_NUMBER: builtins.int
    TOURNAMENT_MODE_FIELD_NUMBER: builtins.int
    @property
    def load(self) -> global___CommandStrategyLoad: ...
    @property
    def close(self) -> global___CommandStrategyClose: ...
    reload: builtins.bool
    auto_reload: builtins.bool
    enable_debug: builtins.bool
    @property
    def debug(self) -> global___CommandStrategyTriggerDebugger: ...
    performance_mode: builtins.bool
    start_profiling: builtins.bool
    finish_and_save_profile: builtins.str
    tournament_mode: builtins.bool
    def __init__(
        self,
        *,
        load: global___CommandStrategyLoad | None = ...,
        close: global___CommandStrategyClose | None = ...,
        reload: builtins.bool | None = ...,
        auto_reload: builtins.bool | None = ...,
        enable_debug: builtins.bool | None = ...,
        debug: global___CommandStrategyTriggerDebugger | None = ...,
        performance_mode: builtins.bool | None = ...,
        start_profiling: builtins.bool | None = ...,
        finish_and_save_profile: builtins.str | None = ...,
        tournament_mode: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "auto_reload",
            b"auto_reload",
            "close",
            b"close",
            "debug",
            b"debug",
            "enable_debug",
            b"enable_debug",
            "finish_and_save_profile",
            b"finish_and_save_profile",
            "load",
            b"load",
            "performance_mode",
            b"performance_mode",
            "reload",
            b"reload",
            "start_profiling",
            b"start_profiling",
            "tournament_mode",
            b"tournament_mode",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "auto_reload",
            b"auto_reload",
            "close",
            b"close",
            "debug",
            b"debug",
            "enable_debug",
            b"enable_debug",
            "finish_and_save_profile",
            b"finish_and_save_profile",
            "load",
            b"load",
            "performance_mode",
            b"performance_mode",
            "reload",
            b"reload",
            "start_profiling",
            b"start_profiling",
            "tournament_mode",
            b"tournament_mode",
        ],
    ) -> None: ...

global___CommandStrategy = CommandStrategy

@typing_extensions.final
class CommandControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMANDS_FIELD_NUMBER: builtins.int
    @property
    def commands(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[robot_pb2.RadioCommand]: ...
    def __init__(
        self,
        *,
        commands: collections.abc.Iterable[robot_pb2.RadioCommand] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commands", b"commands"]) -> None: ...

global___CommandControl = CommandControl

@typing_extensions.final
class TransceiverConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_FIELD_NUMBER: builtins.int
    channel: builtins.int
    def __init__(
        self,
        *,
        channel: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["channel", b"channel"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel", b"channel"]) -> None: ...

global___TransceiverConfiguration = TransceiverConfiguration

@typing_extensions.final
class HostAddress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    host: builtins.str
    port: builtins.int
    def __init__(
        self,
        *,
        host: builtins.str | None = ...,
        port: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["host", b"host", "port", b"port"]
    ) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["host", b"host", "port", b"port"]) -> None: ...

global___HostAddress = HostAddress

@typing_extensions.final
class SimulatorNetworking(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONTROL_SIMULATOR_FIELD_NUMBER: builtins.int
    CONTROL_BLUE_FIELD_NUMBER: builtins.int
    CONTROL_YELLOW_FIELD_NUMBER: builtins.int
    PORT_BLUE_FIELD_NUMBER: builtins.int
    PORT_YELLOW_FIELD_NUMBER: builtins.int
    control_simulator: builtins.bool
    control_blue: builtins.bool
    control_yellow: builtins.bool
    port_blue: builtins.int
    port_yellow: builtins.int
    def __init__(
        self,
        *,
        control_simulator: builtins.bool | None = ...,
        control_blue: builtins.bool | None = ...,
        control_yellow: builtins.bool | None = ...,
        port_blue: builtins.int | None = ...,
        port_yellow: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "control_blue",
            b"control_blue",
            "control_simulator",
            b"control_simulator",
            "control_yellow",
            b"control_yellow",
            "port_blue",
            b"port_blue",
            "port_yellow",
            b"port_yellow",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "control_blue",
            b"control_blue",
            "control_simulator",
            b"control_simulator",
            "control_yellow",
            b"control_yellow",
            "port_blue",
            b"port_blue",
            "port_yellow",
            b"port_yellow",
        ],
    ) -> None: ...

global___SimulatorNetworking = SimulatorNetworking

@typing_extensions.final
class CommandTransceiver(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLE_FIELD_NUMBER: builtins.int
    CHARGE_FIELD_NUMBER: builtins.int
    CONFIGURATION_FIELD_NUMBER: builtins.int
    NETWORK_CONFIGURATION_FIELD_NUMBER: builtins.int
    USE_NETWORK_FIELD_NUMBER: builtins.int
    SIMULATOR_CONFIGURATION_FIELD_NUMBER: builtins.int
    enable: builtins.bool
    charge: builtins.bool
    @property
    def configuration(self) -> global___TransceiverConfiguration: ...
    @property
    def network_configuration(self) -> global___HostAddress: ...
    use_network: builtins.bool
    @property
    def simulator_configuration(self) -> global___SimulatorNetworking: ...
    def __init__(
        self,
        *,
        enable: builtins.bool | None = ...,
        charge: builtins.bool | None = ...,
        configuration: global___TransceiverConfiguration | None = ...,
        network_configuration: global___HostAddress | None = ...,
        use_network: builtins.bool | None = ...,
        simulator_configuration: global___SimulatorNetworking | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "charge",
            b"charge",
            "configuration",
            b"configuration",
            "enable",
            b"enable",
            "network_configuration",
            b"network_configuration",
            "simulator_configuration",
            b"simulator_configuration",
            "use_network",
            b"use_network",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "charge",
            b"charge",
            "configuration",
            b"configuration",
            "enable",
            b"enable",
            "network_configuration",
            b"network_configuration",
            "simulator_configuration",
            b"simulator_configuration",
            "use_network",
            b"use_network",
        ],
    ) -> None: ...

global___CommandTransceiver = CommandTransceiver

@typing_extensions.final
class VirtualFieldTransform(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    A11_FIELD_NUMBER: builtins.int
    A12_FIELD_NUMBER: builtins.int
    A21_FIELD_NUMBER: builtins.int
    A22_FIELD_NUMBER: builtins.int
    OFFSETX_FIELD_NUMBER: builtins.int
    OFFSETY_FIELD_NUMBER: builtins.int
    a11: builtins.float
    a12: builtins.float
    a21: builtins.float
    a22: builtins.float
    offsetX: builtins.float
    offsetY: builtins.float
    def __init__(
        self,
        *,
        a11: builtins.float | None = ...,
        a12: builtins.float | None = ...,
        a21: builtins.float | None = ...,
        a22: builtins.float | None = ...,
        offsetX: builtins.float | None = ...,
        offsetY: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "a11",
            b"a11",
            "a12",
            b"a12",
            "a21",
            b"a21",
            "a22",
            b"a22",
            "offsetX",
            b"offsetX",
            "offsetY",
            b"offsetY",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "a11",
            b"a11",
            "a12",
            b"a12",
            "a21",
            b"a21",
            "a22",
            b"a22",
            "offsetX",
            b"offsetX",
            "offsetY",
            b"offsetY",
        ],
    ) -> None: ...

global___VirtualFieldTransform = VirtualFieldTransform

@typing_extensions.final
class CommandTracking(google.protobuf.message.Message):
    """WARNING: if tracking parameters are added in the ui, it must be checked if they are necessary
    for the trackig replay (and if they are they must be saved in status packages)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AOI_ENABLED_FIELD_NUMBER: builtins.int
    AOI_FIELD_NUMBER: builtins.int
    SYSTEM_DELAY_FIELD_NUMBER: builtins.int
    RESET_FIELD_NUMBER: builtins.int
    ENABLE_VIRTUAL_FIELD_FIELD_NUMBER: builtins.int
    FIELD_TRANSFORM_FIELD_NUMBER: builtins.int
    VIRTUAL_GEOMETRY_FIELD_NUMBER: builtins.int
    TRACKING_REPLAY_ENABLED_FIELD_NUMBER: builtins.int
    BALL_MODEL_FIELD_NUMBER: builtins.int
    aoi_enabled: builtins.bool
    @property
    def aoi(self) -> world_pb2.TrackingAOI: ...
    system_delay: builtins.int
    reset: builtins.bool
    enable_virtual_field: builtins.bool
    @property
    def field_transform(self) -> global___VirtualFieldTransform: ...
    @property
    def virtual_geometry(self) -> world_pb2.Geometry: ...
    tracking_replay_enabled: builtins.bool
    @property
    def ball_model(self) -> world_pb2.BallModel: ...
    def __init__(
        self,
        *,
        aoi_enabled: builtins.bool | None = ...,
        aoi: world_pb2.TrackingAOI | None = ...,
        system_delay: builtins.int | None = ...,
        reset: builtins.bool | None = ...,
        enable_virtual_field: builtins.bool | None = ...,
        field_transform: global___VirtualFieldTransform | None = ...,
        virtual_geometry: world_pb2.Geometry | None = ...,
        tracking_replay_enabled: builtins.bool | None = ...,
        ball_model: world_pb2.BallModel | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "aoi",
            b"aoi",
            "aoi_enabled",
            b"aoi_enabled",
            "ball_model",
            b"ball_model",
            "enable_virtual_field",
            b"enable_virtual_field",
            "field_transform",
            b"field_transform",
            "reset",
            b"reset",
            "system_delay",
            b"system_delay",
            "tracking_replay_enabled",
            b"tracking_replay_enabled",
            "virtual_geometry",
            b"virtual_geometry",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "aoi",
            b"aoi",
            "aoi_enabled",
            b"aoi_enabled",
            "ball_model",
            b"ball_model",
            "enable_virtual_field",
            b"enable_virtual_field",
            "field_transform",
            b"field_transform",
            "reset",
            b"reset",
            "system_delay",
            b"system_delay",
            "tracking_replay_enabled",
            b"tracking_replay_enabled",
            "virtual_geometry",
            b"virtual_geometry",
        ],
    ) -> None: ...

global___CommandTracking = CommandTracking

@typing_extensions.final
class CommandStrategyChangeOption(google.protobuf.message.Message):
    """the UI may not store the option state, therefore only single values will be changed (by hand)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    value: builtins.bool
    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        value: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]
    ) -> None: ...

global___CommandStrategyChangeOption = CommandStrategyChangeOption

@typing_extensions.final
class CommandAmun(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VISION_PORT_FIELD_NUMBER: builtins.int
    REFEREE_PORT_FIELD_NUMBER: builtins.int
    CHANGE_OPTION_FIELD_NUMBER: builtins.int
    vision_port: builtins.int
    referee_port: builtins.int
    @property
    def change_option(self) -> global___CommandStrategyChangeOption: ...
    def __init__(
        self,
        *,
        vision_port: builtins.int | None = ...,
        referee_port: builtins.int | None = ...,
        change_option: global___CommandStrategyChangeOption | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "change_option", b"change_option", "referee_port", b"referee_port", "vision_port", b"vision_port"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "change_option", b"change_option", "referee_port", b"referee_port", "vision_port", b"vision_port"
        ],
    ) -> None: ...

global___CommandAmun = CommandAmun

@typing_extensions.final
class CommandDebuggerInputDisable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___CommandDebuggerInputDisable = CommandDebuggerInputDisable

@typing_extensions.final
class CommandDebuggerInputLine(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LINE_FIELD_NUMBER: builtins.int
    line: builtins.str
    def __init__(
        self,
        *,
        line: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["line", b"line"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["line", b"line"]) -> None: ...

global___CommandDebuggerInputLine = CommandDebuggerInputLine

@typing_extensions.final
class CommandDebuggerInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STRATEGY_TYPE_FIELD_NUMBER: builtins.int
    DISABLE_FIELD_NUMBER: builtins.int
    QUEUE_LINE_FIELD_NUMBER: builtins.int
    strategy_type: global___DebuggerInputTarget.ValueType
    @property
    def disable(self) -> global___CommandDebuggerInputDisable: ...
    @property
    def queue_line(self) -> global___CommandDebuggerInputLine: ...
    def __init__(
        self,
        *,
        strategy_type: global___DebuggerInputTarget.ValueType | None = ...,
        disable: global___CommandDebuggerInputDisable | None = ...,
        queue_line: global___CommandDebuggerInputLine | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "disable", b"disable", "queue_line", b"queue_line", "strategy_type", b"strategy_type"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "disable", b"disable", "queue_line", b"queue_line", "strategy_type", b"strategy_type"
        ],
    ) -> None: ...

global___CommandDebuggerInput = CommandDebuggerInput

@typing_extensions.final
class PauseSimulatorCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REASON_FIELD_NUMBER: builtins.int
    PAUSE_FIELD_NUMBER: builtins.int
    TOGGLE_FIELD_NUMBER: builtins.int
    reason: global___PauseSimulatorReason.ValueType
    pause: builtins.bool
    toggle: builtins.bool
    def __init__(
        self,
        *,
        reason: global___PauseSimulatorReason.ValueType | None = ...,
        pause: builtins.bool | None = ...,
        toggle: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["pause", b"pause", "reason", b"reason", "toggle", b"toggle"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["pause", b"pause", "reason", b"reason", "toggle", b"toggle"],
    ) -> None: ...

global___PauseSimulatorCommand = PauseSimulatorCommand

@typing_extensions.final
class CommandReplay(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLE_FIELD_NUMBER: builtins.int
    ENABLE_BLUE_STRATEGY_FIELD_NUMBER: builtins.int
    BLUE_STRATEGY_FIELD_NUMBER: builtins.int
    ENABLE_YELLOW_STRATEGY_FIELD_NUMBER: builtins.int
    YELLOW_STRATEGY_FIELD_NUMBER: builtins.int
    enable: builtins.bool
    """replay in general, not any specific strategy. This may be enabled even when no strategy is replayed"""
    enable_blue_strategy: builtins.bool
    @property
    def blue_strategy(self) -> global___CommandStrategy: ...
    enable_yellow_strategy: builtins.bool
    @property
    def yellow_strategy(self) -> global___CommandStrategy: ...
    def __init__(
        self,
        *,
        enable: builtins.bool | None = ...,
        enable_blue_strategy: builtins.bool | None = ...,
        blue_strategy: global___CommandStrategy | None = ...,
        enable_yellow_strategy: builtins.bool | None = ...,
        yellow_strategy: global___CommandStrategy | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "blue_strategy",
            b"blue_strategy",
            "enable",
            b"enable",
            "enable_blue_strategy",
            b"enable_blue_strategy",
            "enable_yellow_strategy",
            b"enable_yellow_strategy",
            "yellow_strategy",
            b"yellow_strategy",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "blue_strategy",
            b"blue_strategy",
            "enable",
            b"enable",
            "enable_blue_strategy",
            b"enable_blue_strategy",
            "enable_yellow_strategy",
            b"enable_yellow_strategy",
            "yellow_strategy",
            b"yellow_strategy",
        ],
    ) -> None: ...

global___CommandReplay = CommandReplay

@typing_extensions.final
class Flag(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Flag = Flag

@typing_extensions.final
class CommandPlayback(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEEK_TIME_FIELD_NUMBER: builtins.int
    SEEK_PACKET_FIELD_NUMBER: builtins.int
    SEEK_TIME_BACKWARDS_FIELD_NUMBER: builtins.int
    PLAYBACK_SPEED_FIELD_NUMBER: builtins.int
    TOGGLE_PAUSED_FIELD_NUMBER: builtins.int
    RUN_PLAYBACK_FIELD_NUMBER: builtins.int
    LOG_PATH_FIELD_NUMBER: builtins.int
    INSTANT_REPLAY_FIELD_NUMBER: builtins.int
    EXPORT_VISION_LOG_FIELD_NUMBER: builtins.int
    GET_UID_FIELD_NUMBER: builtins.int
    FIND_LOGFILE_FIELD_NUMBER: builtins.int
    PLAYBACK_LIMIT_FIELD_NUMBER: builtins.int
    seek_time: builtins.int
    seek_packet: builtins.int
    seek_time_backwards: builtins.int
    playback_speed: builtins.int
    @property
    def toggle_paused(self) -> global___Flag: ...
    run_playback: builtins.bool
    """used to switch between live and log (corresponding to ra and horus in the UI)"""
    @property
    def log_path(self) -> logfile_pb2.LogRequest: ...
    @property
    def instant_replay(self) -> global___Flag: ...
    export_vision_log: builtins.str
    """the location to save the vision log to"""
    @property
    def get_uid(self) -> global___Flag: ...
    find_logfile: builtins.str
    playback_limit: builtins.int
    def __init__(
        self,
        *,
        seek_time: builtins.int | None = ...,
        seek_packet: builtins.int | None = ...,
        seek_time_backwards: builtins.int | None = ...,
        playback_speed: builtins.int | None = ...,
        toggle_paused: global___Flag | None = ...,
        run_playback: builtins.bool | None = ...,
        log_path: logfile_pb2.LogRequest | None = ...,
        instant_replay: global___Flag | None = ...,
        export_vision_log: builtins.str | None = ...,
        get_uid: global___Flag | None = ...,
        find_logfile: builtins.str | None = ...,
        playback_limit: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "export_vision_log",
            b"export_vision_log",
            "find_logfile",
            b"find_logfile",
            "get_uid",
            b"get_uid",
            "instant_replay",
            b"instant_replay",
            "log_path",
            b"log_path",
            "playback_limit",
            b"playback_limit",
            "playback_speed",
            b"playback_speed",
            "run_playback",
            b"run_playback",
            "seek_packet",
            b"seek_packet",
            "seek_time",
            b"seek_time",
            "seek_time_backwards",
            b"seek_time_backwards",
            "toggle_paused",
            b"toggle_paused",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "export_vision_log",
            b"export_vision_log",
            "find_logfile",
            b"find_logfile",
            "get_uid",
            b"get_uid",
            "instant_replay",
            b"instant_replay",
            "log_path",
            b"log_path",
            "playback_limit",
            b"playback_limit",
            "playback_speed",
            b"playback_speed",
            "run_playback",
            b"run_playback",
            "seek_packet",
            b"seek_packet",
            "seek_time",
            b"seek_time",
            "seek_time_backwards",
            b"seek_time_backwards",
            "toggle_paused",
            b"toggle_paused",
        ],
    ) -> None: ...

global___CommandPlayback = CommandPlayback

@typing_extensions.final
class CommandRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USE_LOGFILE_LOCATION_FIELD_NUMBER: builtins.int
    SAVE_BACKLOG_FIELD_NUMBER: builtins.int
    RUN_LOGGING_FIELD_NUMBER: builtins.int
    FOR_REPLAY_FIELD_NUMBER: builtins.int
    REQUEST_BACKLOG_FIELD_NUMBER: builtins.int
    OVERWRITE_RECORD_FILENAME_FIELD_NUMBER: builtins.int
    use_logfile_location: builtins.bool
    @property
    def save_backlog(self) -> global___Flag: ...
    run_logging: builtins.bool
    for_replay: builtins.bool
    """has to be set to either true or false iff save_backlog, request_backlog or run_logging are set"""
    request_backlog: builtins.int
    """sent by the plotter when opened."""
    overwrite_record_filename: builtins.str
    """must be given in the first frame in which run_logging is true to be effective"""
    def __init__(
        self,
        *,
        use_logfile_location: builtins.bool | None = ...,
        save_backlog: global___Flag | None = ...,
        run_logging: builtins.bool | None = ...,
        for_replay: builtins.bool | None = ...,
        request_backlog: builtins.int | None = ...,
        overwrite_record_filename: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "for_replay",
            b"for_replay",
            "overwrite_record_filename",
            b"overwrite_record_filename",
            "request_backlog",
            b"request_backlog",
            "run_logging",
            b"run_logging",
            "save_backlog",
            b"save_backlog",
            "use_logfile_location",
            b"use_logfile_location",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "for_replay",
            b"for_replay",
            "overwrite_record_filename",
            b"overwrite_record_filename",
            "request_backlog",
            b"request_backlog",
            "run_logging",
            b"run_logging",
            "save_backlog",
            b"save_backlog",
            "use_logfile_location",
            b"use_logfile_location",
        ],
    ) -> None: ...

global___CommandRecord = CommandRecord

@typing_extensions.final
class Command(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIMULATOR_FIELD_NUMBER: builtins.int
    REFEREE_FIELD_NUMBER: builtins.int
    SET_TEAM_BLUE_FIELD_NUMBER: builtins.int
    SET_TEAM_YELLOW_FIELD_NUMBER: builtins.int
    STRATEGY_BLUE_FIELD_NUMBER: builtins.int
    STRATEGY_YELLOW_FIELD_NUMBER: builtins.int
    STRATEGY_AUTOREF_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    TRANSCEIVER_FIELD_NUMBER: builtins.int
    TRACKING_FIELD_NUMBER: builtins.int
    AMUN_FIELD_NUMBER: builtins.int
    MIXED_TEAM_DESTINATION_FIELD_NUMBER: builtins.int
    ROBOT_MOVE_BLUE_FIELD_NUMBER: builtins.int
    ROBOT_MOVE_YELLOW_FIELD_NUMBER: builtins.int
    DEBUGGER_INPUT_FIELD_NUMBER: builtins.int
    PAUSE_SIMULATOR_FIELD_NUMBER: builtins.int
    REPLAY_FIELD_NUMBER: builtins.int
    PLAYBACK_FIELD_NUMBER: builtins.int
    RECORD_FIELD_NUMBER: builtins.int
    @property
    def simulator(self) -> global___CommandSimulator: ...
    @property
    def referee(self) -> global___CommandReferee: ...
    @property
    def set_team_blue(self) -> robot_pb2.Team: ...
    @property
    def set_team_yellow(self) -> robot_pb2.Team: ...
    @property
    def strategy_blue(self) -> global___CommandStrategy: ...
    @property
    def strategy_yellow(self) -> global___CommandStrategy: ...
    @property
    def strategy_autoref(self) -> global___CommandStrategy: ...
    @property
    def control(self) -> global___CommandControl: ...
    @property
    def transceiver(self) -> global___CommandTransceiver: ...
    @property
    def tracking(self) -> global___CommandTracking:
        """optional float speed = 10;"""
    @property
    def amun(self) -> global___CommandAmun: ...
    @property
    def mixed_team_destination(self) -> global___HostAddress: ...
    @property
    def robot_move_blue(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotMoveCommand]: ...
    @property
    def robot_move_yellow(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotMoveCommand]: ...
    @property
    def debugger_input(self) -> global___CommandDebuggerInput: ...
    @property
    def pause_simulator(self) -> global___PauseSimulatorCommand: ...
    @property
    def replay(self) -> global___CommandReplay: ...
    @property
    def playback(self) -> global___CommandPlayback: ...
    @property
    def record(self) -> global___CommandRecord: ...
    def __init__(
        self,
        *,
        simulator: global___CommandSimulator | None = ...,
        referee: global___CommandReferee | None = ...,
        set_team_blue: robot_pb2.Team | None = ...,
        set_team_yellow: robot_pb2.Team | None = ...,
        strategy_blue: global___CommandStrategy | None = ...,
        strategy_yellow: global___CommandStrategy | None = ...,
        strategy_autoref: global___CommandStrategy | None = ...,
        control: global___CommandControl | None = ...,
        transceiver: global___CommandTransceiver | None = ...,
        tracking: global___CommandTracking | None = ...,
        amun: global___CommandAmun | None = ...,
        mixed_team_destination: global___HostAddress | None = ...,
        robot_move_blue: collections.abc.Iterable[global___RobotMoveCommand] | None = ...,
        robot_move_yellow: collections.abc.Iterable[global___RobotMoveCommand] | None = ...,
        debugger_input: global___CommandDebuggerInput | None = ...,
        pause_simulator: global___PauseSimulatorCommand | None = ...,
        replay: global___CommandReplay | None = ...,
        playback: global___CommandPlayback | None = ...,
        record: global___CommandRecord | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "amun",
            b"amun",
            "control",
            b"control",
            "debugger_input",
            b"debugger_input",
            "mixed_team_destination",
            b"mixed_team_destination",
            "pause_simulator",
            b"pause_simulator",
            "playback",
            b"playback",
            "record",
            b"record",
            "referee",
            b"referee",
            "replay",
            b"replay",
            "set_team_blue",
            b"set_team_blue",
            "set_team_yellow",
            b"set_team_yellow",
            "simulator",
            b"simulator",
            "strategy_autoref",
            b"strategy_autoref",
            "strategy_blue",
            b"strategy_blue",
            "strategy_yellow",
            b"strategy_yellow",
            "tracking",
            b"tracking",
            "transceiver",
            b"transceiver",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "amun",
            b"amun",
            "control",
            b"control",
            "debugger_input",
            b"debugger_input",
            "mixed_team_destination",
            b"mixed_team_destination",
            "pause_simulator",
            b"pause_simulator",
            "playback",
            b"playback",
            "record",
            b"record",
            "referee",
            b"referee",
            "replay",
            b"replay",
            "robot_move_blue",
            b"robot_move_blue",
            "robot_move_yellow",
            b"robot_move_yellow",
            "set_team_blue",
            b"set_team_blue",
            "set_team_yellow",
            b"set_team_yellow",
            "simulator",
            b"simulator",
            "strategy_autoref",
            b"strategy_autoref",
            "strategy_blue",
            b"strategy_blue",
            "strategy_yellow",
            b"strategy_yellow",
            "tracking",
            b"tracking",
            "transceiver",
            b"transceiver",
        ],
    ) -> None: ...

global___Command = Command
