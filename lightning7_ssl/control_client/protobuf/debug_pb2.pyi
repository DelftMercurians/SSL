"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DebugSource:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DebugSourceEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DebugSource.ValueType], builtins.type
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    StrategyBlue: _DebugSource.ValueType  # 1
    StrategyYellow: _DebugSource.ValueType  # 2
    Controller: _DebugSource.ValueType  # 3
    Autoref: _DebugSource.ValueType  # 4
    Tracking: _DebugSource.ValueType  # 5
    RadioResponse: _DebugSource.ValueType  # 6
    ReplayBlue: _DebugSource.ValueType  # 7
    ReplayYellow: _DebugSource.ValueType  # 8
    NetworkTransceiver: _DebugSource.ValueType  # 9
    GameController: _DebugSource.ValueType  # 10

class DebugSource(_DebugSource, metaclass=_DebugSourceEnumTypeWrapper): ...

StrategyBlue: DebugSource.ValueType  # 1
StrategyYellow: DebugSource.ValueType  # 2
Controller: DebugSource.ValueType  # 3
Autoref: DebugSource.ValueType  # 4
Tracking: DebugSource.ValueType  # 5
RadioResponse: DebugSource.ValueType  # 6
ReplayBlue: DebugSource.ValueType  # 7
ReplayYellow: DebugSource.ValueType  # 8
NetworkTransceiver: DebugSource.ValueType  # 9
GameController: DebugSource.ValueType  # 10
global___DebugSource = DebugSource

@typing_extensions.final
class Color(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RED_FIELD_NUMBER: builtins.int
    GREEN_FIELD_NUMBER: builtins.int
    BLUE_FIELD_NUMBER: builtins.int
    ALPHA_FIELD_NUMBER: builtins.int
    red: builtins.int
    green: builtins.int
    blue: builtins.int
    alpha: builtins.int
    def __init__(
        self,
        *,
        red: builtins.int | None = ...,
        green: builtins.int | None = ...,
        blue: builtins.int | None = ...,
        alpha: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "alpha", b"alpha", "blue", b"blue", "green", b"green", "red", b"red"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "alpha", b"alpha", "blue", b"blue", "green", b"green", "red", b"red"
        ],
    ) -> None: ...

global___Color = Color

@typing_extensions.final
class Pen(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Style:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StyleEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Pen._Style.ValueType], builtins.type
    ):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DashLine: Pen._Style.ValueType  # 1
        DotLine: Pen._Style.ValueType  # 2
        DashDotLine: Pen._Style.ValueType  # 3
        DashDotDotLine: Pen._Style.ValueType  # 4

    class Style(_Style, metaclass=_StyleEnumTypeWrapper): ...
    DashLine: Pen.Style.ValueType  # 1
    DotLine: Pen.Style.ValueType  # 2
    DashDotLine: Pen.Style.ValueType  # 3
    DashDotDotLine: Pen.Style.ValueType  # 4

    STYLE_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    style: global___Pen.Style.ValueType
    @property
    def color(self) -> global___Color: ...
    def __init__(
        self,
        *,
        style: global___Pen.Style.ValueType | None = ...,
        color: global___Color | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["color", b"color", "style", b"style"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["color", b"color", "style", b"style"]
    ) -> None: ...

global___Pen = Pen

@typing_extensions.final
class Circle(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    P_X_FIELD_NUMBER: builtins.int
    P_Y_FIELD_NUMBER: builtins.int
    RADIUS_FIELD_NUMBER: builtins.int
    p_x: builtins.float
    p_y: builtins.float
    radius: builtins.float
    def __init__(
        self,
        *,
        p_x: builtins.float | None = ...,
        p_y: builtins.float | None = ...,
        radius: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["p_x", b"p_x", "p_y", b"p_y", "radius", b"radius"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["p_x", b"p_x", "p_y", b"p_y", "radius", b"radius"]
    ) -> None: ...

global___Circle = Circle

@typing_extensions.final
class Point(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float | None = ...,
        y: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y"]) -> None: ...

global___Point = Point

@typing_extensions.final
class Polygon(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POINT_FIELD_NUMBER: builtins.int
    @property
    def point(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Point]: ...
    def __init__(
        self,
        *,
        point: collections.abc.Iterable[global___Point] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["point", b"point"]) -> None: ...

global___Polygon = Polygon

@typing_extensions.final
class Path(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POINT_FIELD_NUMBER: builtins.int
    @property
    def point(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Point]: ...
    def __init__(
        self,
        *,
        point: collections.abc.Iterable[global___Point] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["point", b"point"]) -> None: ...

global___Path = Path

@typing_extensions.final
class Rectangle(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOPLEFT_FIELD_NUMBER: builtins.int
    BOTTOMRIGHT_FIELD_NUMBER: builtins.int
    @property
    def topleft(self) -> global___Point:
        """the minimum of the x and y corner values"""
    @property
    def bottomright(self) -> global___Point:
        """the maximum of the x and y corner values"""
    def __init__(
        self,
        *,
        topleft: global___Point | None = ...,
        bottomright: global___Point | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["bottomright", b"bottomright", "topleft", b"topleft"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["bottomright", b"bottomright", "topleft", b"topleft"]
    ) -> None: ...

global___Rectangle = Rectangle

@typing_extensions.final
class ImageVisualization(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    DRAW_AREA_FIELD_NUMBER: builtins.int
    width: builtins.int
    height: builtins.int
    data: builtins.bytes
    """data containing blue, green, red and alpha bytes in this exact order"""
    @property
    def draw_area(self) -> global___Rectangle:
        """if not given, the whole field rectangle is used"""
    def __init__(
        self,
        *,
        width: builtins.int | None = ...,
        height: builtins.int | None = ...,
        data: builtins.bytes | None = ...,
        draw_area: global___Rectangle | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "data", b"data", "draw_area", b"draw_area", "height", b"height", "width", b"width"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "data", b"data", "draw_area", b"draw_area", "height", b"height", "width", b"width"
        ],
    ) -> None: ...

global___ImageVisualization = ImageVisualization

@typing_extensions.final
class Visualization(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PEN_FIELD_NUMBER: builtins.int
    BRUSH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    CIRCLE_FIELD_NUMBER: builtins.int
    POLYGON_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    BACKGROUND_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def pen(self) -> global___Pen: ...
    @property
    def brush(self) -> global___Color: ...
    width: builtins.float
    @property
    def circle(self) -> global___Circle: ...
    @property
    def polygon(self) -> global___Polygon: ...
    @property
    def path(self) -> global___Path: ...
    background: builtins.bool
    @property
    def image(self) -> global___ImageVisualization: ...
    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        pen: global___Pen | None = ...,
        brush: global___Color | None = ...,
        width: builtins.float | None = ...,
        circle: global___Circle | None = ...,
        polygon: global___Polygon | None = ...,
        path: global___Path | None = ...,
        background: builtins.bool | None = ...,
        image: global___ImageVisualization | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "background",
            b"background",
            "brush",
            b"brush",
            "circle",
            b"circle",
            "image",
            b"image",
            "name",
            b"name",
            "path",
            b"path",
            "pen",
            b"pen",
            "polygon",
            b"polygon",
            "width",
            b"width",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "background",
            b"background",
            "brush",
            b"brush",
            "circle",
            b"circle",
            "image",
            b"image",
            "name",
            b"name",
            "path",
            b"path",
            "pen",
            b"pen",
            "polygon",
            b"polygon",
            "width",
            b"width",
        ],
    ) -> None: ...

global___Visualization = Visualization

@typing_extensions.final
class DebugValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    FLOAT_VALUE_FIELD_NUMBER: builtins.int
    BOOL_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    key: builtins.str
    float_value: builtins.float
    bool_value: builtins.bool
    string_value: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str | None = ...,
        float_value: builtins.float | None = ...,
        bool_value: builtins.bool | None = ...,
        string_value: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "bool_value",
            b"bool_value",
            "float_value",
            b"float_value",
            "key",
            b"key",
            "string_value",
            b"string_value",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "bool_value",
            b"bool_value",
            "float_value",
            b"float_value",
            "key",
            b"key",
            "string_value",
            b"string_value",
        ],
    ) -> None: ...

global___DebugValue = DebugValue

@typing_extensions.final
class StatusLog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    text: builtins.str
    def __init__(
        self,
        *,
        timestamp: builtins.int | None = ...,
        text: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["text", b"text", "timestamp", b"timestamp"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["text", b"text", "timestamp", b"timestamp"]
    ) -> None: ...

global___StatusLog = StatusLog

@typing_extensions.final
class PlotValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    value: builtins.float
    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        value: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]
    ) -> None: ...

global___PlotValue = PlotValue

@typing_extensions.final
class RobotValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENERATION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    EXCHANGE_FIELD_NUMBER: builtins.int
    generation: builtins.int
    id: builtins.int
    exchange: builtins.bool
    def __init__(
        self,
        *,
        generation: builtins.int | None = ...,
        id: builtins.int | None = ...,
        exchange: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "exchange", b"exchange", "generation", b"generation", "id", b"id"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "exchange", b"exchange", "generation", b"generation", "id", b"id"
        ],
    ) -> None: ...

global___RobotValue = RobotValue

@typing_extensions.final
class DebuggerOutput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LINE_FIELD_NUMBER: builtins.int
    line: builtins.str
    def __init__(
        self,
        *,
        line: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["line", b"line"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["line", b"line"]) -> None: ...

global___DebuggerOutput = DebuggerOutput

@typing_extensions.final
class DebugValues(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    VISUALIZATION_FIELD_NUMBER: builtins.int
    LOG_FIELD_NUMBER: builtins.int
    PLOT_FIELD_NUMBER: builtins.int
    ROBOT_FIELD_NUMBER: builtins.int
    DEBUGGER_OUTPUT_FIELD_NUMBER: builtins.int
    source: global___DebugSource.ValueType
    time: builtins.int
    @property
    def value(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DebugValue]: ...
    @property
    def visualization(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Visualization]: ...
    @property
    def log(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatusLog]: ...
    @property
    def plot(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PlotValue]: ...
    @property
    def robot(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotValue]: ...
    @property
    def debugger_output(self) -> global___DebuggerOutput: ...
    def __init__(
        self,
        *,
        source: global___DebugSource.ValueType | None = ...,
        time: builtins.int | None = ...,
        value: collections.abc.Iterable[global___DebugValue] | None = ...,
        visualization: collections.abc.Iterable[global___Visualization] | None = ...,
        log: collections.abc.Iterable[global___StatusLog] | None = ...,
        plot: collections.abc.Iterable[global___PlotValue] | None = ...,
        robot: collections.abc.Iterable[global___RobotValue] | None = ...,
        debugger_output: global___DebuggerOutput | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "debugger_output", b"debugger_output", "source", b"source", "time", b"time"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "debugger_output",
            b"debugger_output",
            "log",
            b"log",
            "plot",
            b"plot",
            "robot",
            b"robot",
            "source",
            b"source",
            "time",
            b"time",
            "value",
            b"value",
            "visualization",
            b"visualization",
        ],
    ) -> None: ...

global___DebugValues = DebugValues
