"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import logfile_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class FrameLookup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UID_FIELD_NUMBER: builtins.int
    FRAME_NUMBER_FIELD_NUMBER: builtins.int
    @property
    def uid(self) -> logfile_pb2.UidEntry: ...
    frame_number: builtins.int
    def __init__(
        self,
        *,
        uid: logfile_pb2.UidEntry | None = ...,
        frame_number: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["frame_number", b"frame_number", "uid", b"uid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["frame_number", b"frame_number", "uid", b"uid"]) -> None: ...

global___FrameLookup = FrameLookup

@typing_extensions.final
class FrameDescriptor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASE_HASH_FIELD_NUMBER: builtins.int
    BASE_FRAME_NUMBER_FIELD_NUMBER: builtins.int
    FRAME_INFOS_FIELD_NUMBER: builtins.int
    base_hash: builtins.str
    base_frame_number: builtins.int
    @property
    def frame_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FrameLookup]: ...
    def __init__(
        self,
        *,
        base_hash: builtins.str | None = ...,
        base_frame_number: builtins.int | None = ...,
        frame_infos: collections.abc.Iterable[global___FrameLookup] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["base_frame_number", b"base_frame_number", "base_hash", b"base_hash"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_frame_number", b"base_frame_number", "base_hash", b"base_hash", "frame_infos", b"frame_infos"]) -> None: ...

global___FrameDescriptor = FrameDescriptor

@typing_extensions.final
class GameEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Progress:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ProgressEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GameEvent._Progress.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Open: GameEvent._Progress.ValueType  # 1
        Closed: GameEvent._Progress.ValueType  # 2
        Postponed: GameEvent._Progress.ValueType  # 3
        Resolved: GameEvent._Progress.ValueType  # 4
        InProgress: GameEvent._Progress.ValueType  # 5
        Info: GameEvent._Progress.ValueType  # 6
        Merged: GameEvent._Progress.ValueType  # 7

    class Progress(_Progress, metaclass=_ProgressEnumTypeWrapper): ...
    Open: GameEvent.Progress.ValueType  # 1
    Closed: GameEvent.Progress.ValueType  # 2
    Postponed: GameEvent.Progress.ValueType  # 3
    Resolved: GameEvent.Progress.ValueType  # 4
    InProgress: GameEvent.Progress.ValueType  # 5
    Info: GameEvent.Progress.ValueType  # 6
    Merged: GameEvent.Progress.ValueType  # 7

    LOCATION_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    RANDOM_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    ASSIGNEE_FIELD_NUMBER: builtins.int
    @property
    def location(self) -> global___FrameDescriptor: ...
    progress: global___GameEvent.Progress.ValueType
    random_id: builtins.str
    """This string is used to detect different events on multiple computers, as an update will not alter this."""
    description: builtins.str
    @property
    def tag(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    assignee: builtins.str
    def __init__(
        self,
        *,
        location: global___FrameDescriptor | None = ...,
        progress: global___GameEvent.Progress.ValueType | None = ...,
        random_id: builtins.str | None = ...,
        description: builtins.str | None = ...,
        tag: collections.abc.Iterable[builtins.str] | None = ...,
        assignee: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assignee", b"assignee", "description", b"description", "location", b"location", "progress", b"progress", "random_id", b"random_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assignee", b"assignee", "description", b"description", "location", b"location", "progress", b"progress", "random_id", b"random_id", "tag", b"tag"]) -> None: ...

global___GameEvent = GameEvent

@typing_extensions.final
class TimelineInit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Resolved:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ResolvedEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TimelineInit._Resolved.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Solved: TimelineInit._Resolved.ValueType  # 1
        Conflicting: TimelineInit._Resolved.ValueType  # 2

    class Resolved(_Resolved, metaclass=_ResolvedEnumTypeWrapper): ...
    Solved: TimelineInit.Resolved.ValueType  # 1
    Conflicting: TimelineInit.Resolved.ValueType  # 2

    PRIMARY_FIELD_NUMBER: builtins.int
    SECONDARY_FIELD_NUMBER: builtins.int
    PARTIALLY_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    @property
    def primary(self) -> logfile_pb2.UidEntry:
        """This logfile is used for LogFileQuality checks. If someone addes a new even while owning a logfile that has less flags, this is updated."""
    @property
    def secondary(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[logfile_pb2.UidEntry]:
        """Also, if someone has a logfile, that contains all GameEvents, while having more flags, this is updated aswell.
        All logfiles referenced in this list are already indexed (every GameEvent contains a FrameLookup for this log, if there is any)
        """
    @property
    def partially(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[logfile_pb2.UidEntry]:
        """If a logfile is referenced here, it has been a secondary log, but due to recent additions without this log, it migrated to partially."""
    state: global___TimelineInit.Resolved.ValueType
    def __init__(
        self,
        *,
        primary: logfile_pb2.UidEntry | None = ...,
        secondary: collections.abc.Iterable[logfile_pb2.UidEntry] | None = ...,
        partially: collections.abc.Iterable[logfile_pb2.UidEntry] | None = ...,
        state: global___TimelineInit.Resolved.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["primary", b"primary", "state", b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partially", b"partially", "primary", b"primary", "secondary", b"secondary", "state", b"state"]) -> None: ...

global___TimelineInit = TimelineInit

@typing_extensions.final
class EventWrapper(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAG_FIELD_NUMBER: builtins.int
    CONFLICTING_FIELD_NUMBER: builtins.int
    tag: builtins.str
    @property
    def conflicting(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GameEvent]: ...
    def __init__(
        self,
        *,
        tag: builtins.str | None = ...,
        conflicting: collections.abc.Iterable[global___GameEvent] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag", b"tag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conflicting", b"conflicting", "tag", b"tag"]) -> None: ...

global___EventWrapper = EventWrapper

@typing_extensions.final
class Status(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WRAPPER_FIELD_NUMBER: builtins.int
    GAME_EVENT_FIELD_NUMBER: builtins.int
    @property
    def wrapper(self) -> global___EventWrapper: ...
    @property
    def game_event(self) -> global___GameEvent: ...
    def __init__(
        self,
        *,
        wrapper: global___EventWrapper | None = ...,
        game_event: global___GameEvent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["game_event", b"game_event", "logfileEntry", b"logfileEntry", "wrapper", b"wrapper"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["game_event", b"game_event", "logfileEntry", b"logfileEntry", "wrapper", b"wrapper"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["logfileEntry", b"logfileEntry"]) -> typing_extensions.Literal["wrapper", "game_event"] | None: ...

global___Status = Status
